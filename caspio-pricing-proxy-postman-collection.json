{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Caspio Pricing Proxy API",
		"description": "Collection of endpoints for the Caspio Pricing Proxy API deployed on Heroku. Updated with 62 endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				},
				"description": "Returns the status of the proxy server and the configured Caspio domain."
			},
			"response": []
		},
		{
			"name": "Get Pricing Tiers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-tiers?method=DTG",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-tiers"
					],
					"query": [
						{
							"key": "method",
							"value": "DTG",
							"description": "Decoration method (DTG, ScreenPrint, Embroidery)"
						}
					]
				},
				"description": "Fetches pricing tiers from the Pricing_Tiers Caspio table based on the decoration method (DTG, ScreenPrint, Embroidery). Requires 'method' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Embroidery Costs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/embroidery-costs?itemType=Cap&stitchCount=5000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"embroidery-costs"
					],
					"query": [
						{
							"key": "itemType",
							"value": "Cap",
							"description": "Type of item (Cap, Shirt, etc.)"
						},
						{
							"key": "stitchCount",
							"value": "5000",
							"description": "Stitch count (5000, 8000, 10000)"
						}
					]
				},
				"description": "Fetches embroidery costs from the Embroidery_Costs Caspio table based on item type and stitch count. Requires 'itemType' and 'stitchCount' query parameters."
			},
			"response": []
		},
		{
			"name": "Get DTG Costs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/dtg-costs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"dtg-costs"
					]
				},
				"description": "Fetches all DTG (Direct to Garment) costs from the DTG_Costs Caspio table, categorized by print location and tier."
			},
			"response": []
		},
		{
			"name": "Get Screenprint Costs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/screenprint-costs?costType=PrimaryLocation",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"screenprint-costs"
					],
					"query": [
						{
							"key": "costType",
							"value": "PrimaryLocation",
							"description": "Cost type (PrimaryLocation or AdditionalLocation)"
						}
					]
				},
				"description": "Fetches screenprint costs from the Screenprint_Costs Caspio table. Requires 'costType' query parameter (PrimaryLocation or AdditionalLocation)."
			},
			"response": []
		},
		{
			"name": "Get Pricing Rules",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-rules",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-rules"
					]
				},
				"description": "Fetches pricing rules from the Pricing_Rules Caspio table, typically filtered by decoration method."
			},
			"response": []
		},
		{
			"name": "Get Base Item Costs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/base-item-costs?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"base-item-costs"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches base item costs (maximum case price per size) for a specific styleNumber from the Sanmar_Bulk_251816_Feb2024 table. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Test SanMar Bulk Data Access",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/test-sanmar-bulk",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"test-sanmar-bulk"
					]
				},
				"description": "A test endpoint to fetch a limited number of records (10) from the Sanmar_Bulk_251816_Feb2024 Caspio table."
			},
			"response": []
		},
		{
			"name": "Search Styles for Autocomplete",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/stylesearch?query=PC",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"stylesearch"
					],
					"query": [
						{
							"key": "query",
							"value": "PC",
							"description": "Search query for style number"
						}
					]
				},
				"description": "Performs a style search in the Sanmar_Bulk_251816_Feb2024 table for autocomplete functionality. Requires 'query' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Product Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/product-details?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"product-details"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches product details (title, description, color-specific images, etc.) for a given styleNumber from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Color Swatches for Style",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/color-swatches?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"color-swatches"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches unique color swatches (color name, catalog color, swatch image) for a specific styleNumber from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Inventory Levels for Style/Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/inventory?styleNumber=PC61&color=Navy",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"inventory"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						},
						{
							"key": "color",
							"value": "Navy",
							"description": "Color of the product"
						}
					]
				},
				"description": "Fetches inventory data (warehouse name, size, quantity, sort orders) for a specific styleNumber and color from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' and 'color' query parameters."
			},
			"response": []
		},
		{
			"name": "Get Products by Brand",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/products-by-brand?brand=Port%20%26%20Company",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products-by-brand"
					],
					"query": [
						{
							"key": "brand",
							"value": "Port & Company",
							"description": "Brand name"
						}
					]
				},
				"description": "Fetches unique products from the Sanmar_Bulk_251816_Feb2024 table that match a given brand name. Requires 'brand' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Products by Category",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/products-by-category?category=T-Shirts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products-by-category"
					],
					"query": [
						{
							"key": "category",
							"value": "T-Shirts",
							"description": "Category name"
						}
					]
				},
				"description": "Fetches unique products from the Sanmar_Bulk_251816_Feb2024 table that match an exact category name. Requires 'category' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Products by Subcategory",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/products-by-subcategory?subcategory=Basic%20Tees",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products-by-subcategory"
					],
					"query": [
						{
							"key": "subcategory",
							"value": "Basic Tees",
							"description": "Subcategory name"
						}
					]
				},
				"description": "Fetches unique products from the Sanmar_Bulk_251816_Feb2024 table where SUBCATEGORY_NAME or PRODUCT_TITLE contains the given subcategory. Requires 'subcategory' query parameter."
			},
			"response": []
		},
		{
			"name": "Get All Brands",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/all-brands",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"all-brands"
					]
				},
				"description": "Fetches all unique brand names from the Sanmar_Bulk_251816_Feb2024 table."
			},
			"response": []
		},
		{
			"name": "Get All Subcategories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/all-subcategories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"all-subcategories"
					]
				},
				"description": "Fetches all unique subcategory names from the Sanmar_Bulk_251816_Feb2024 table, sorted alphabetically."
			},
			"response": []
		},
		{
			"name": "Get All Categories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/all-categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"all-categories"
					]
				},
				"description": "Fetches all unique category names from the Sanmar_Bulk_251816_Feb2024 table, sorted alphabetically."
			},
			"response": []
		},
		{
			"name": "Get Subcategories for Category",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/subcategories-by-category?category=T-Shirts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"subcategories-by-category"
					],
					"query": [
						{
							"key": "category",
							"value": "T-Shirts",
							"description": "Category name"
						}
					]
				},
				"description": "Fetches unique subcategory names from the Sanmar_Bulk_251816_Feb2024 table that belong to a given category. Requires 'category' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Products by Category and Subcategory",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/products-by-category-subcategory?category=T-Shirts&subcategory=Basic%20Tees",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"products-by-category-subcategory"
					],
					"query": [
						{
							"key": "category",
							"value": "T-Shirts",
							"description": "Category name"
						},
						{
							"key": "subcategory",
							"value": "Basic Tees",
							"description": "Subcategory name"
						}
					]
				},
				"description": "Fetches unique products from Sanmar_Bulk_251816_Feb2024 matching both category and subcategory. Requires 'category' and 'subcategory' query parameters."
			},
			"response": []
		},
		{
			"name": "Perform General Product Search",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/search?query=Blue%20Shirt",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "Blue Shirt",
							"description": "General search query"
						}
					]
				},
				"description": "Performs a general search across multiple fields (PRODUCT_TITLE, STYLE_NUMBER, CATEGORY_NAME, SUBCATEGORY_NAME, BRAND_NAME) in Sanmar_Bulk_251816_Feb2024. Requires 'query' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Featured (New) Products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/featured-products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"featured-products"
					]
				},
				"description": "Fetches unique products from Sanmar_Bulk_251816_Feb2024 that have a PRODUCT_STATUS of 'New'."
			},
			"response": []
		},
		{
			"name": "Get Related Products for Style",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/related-products?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"related-products"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches unique products from Sanmar_Bulk_251816_Feb2024 that are related to a given styleNumber (e.g., same collection or companion styles). Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Filter Products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/filter-products?brand=Nike&category=Polos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"filter-products"
					],
					"query": [
						{
							"key": "brand",
							"value": "Nike",
							"description": "Brand name (optional)"
						},
						{
							"key": "category",
							"value": "Polos",
							"description": "Category name (optional)"
						}
					]
				},
				"description": "Fetches unique products from Sanmar_Bulk_251816_Feb2024 based on a combination of filter parameters such as brand, category, subcategory, color, size, and price range. Requires relevant query parameters."
			},
			"response": []
		},
		{
			"name": "Get Product Details for Quick View",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/quick-view?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"quick-view"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches essential product details for a quick view popup, for a given styleNumber. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Products for Comparison",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/compare-products?styleNumbers=PC61,DT104",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"compare-products"
					],
					"query": [
						{
							"key": "styleNumbers",
							"value": "PC61,DT104",
							"description": "Comma-separated list of style numbers"
						}
					]
				},
				"description": "Fetches details for a list of product styles to allow comparison. Requires 'styleNumbers' query parameter (comma-separated list)."
			},
			"response": []
		},
		{
			"name": "Get Product Recommendations",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/recommendations?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"recommendations"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number (optional)"
						}
					]
				},
				"description": "Fetches product recommendations based on a styleNumber or user browsing history. Requires 'styleNumber' or 'userId' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Available Sizes for Style/Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/sizes-by-style-color?styleNumber=PC61&color=Navy",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"sizes-by-style-color"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						},
						{
							"key": "color",
							"value": "Navy",
							"description": "Color of the product"
						}
					]
				},
				"description": "Fetches inventory data (sizes, quantities per warehouse) for a specific styleNumber and color. Requires 'styleNumber' and 'color' query parameters."
			},
			"response": []
		},
		{
			"name": "Get Prices for Sizes of Style/Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/prices-by-style-color?styleNumber=PC61&color=Navy",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"prices-by-style-color"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						},
						{
							"key": "color",
							"value": "Navy",
							"description": "Color of the product"
						}
					]
				},
				"description": "Fetches case prices for each size of a specific styleNumber and color from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' and 'color' query parameters."
			},
			"response": []
		},
		{
			"name": "Get Max Prices for Sizes of Style",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/max-prices-by-style?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"max-prices-by-style"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches the maximum case price for each size of a given styleNumber from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Detailed Size Pricing for Style",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/size-pricing?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"size-pricing"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches detailed size pricing information, including upcharges, for a styleNumber from Sanmar_Bulk_251816_Feb2024. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Customers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/customers?email=test%40example.com",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"customers"
					],
					"query": [
						{
							"key": "email",
							"value": "test@example.com",
							"description": "Customer email (optional filter)"
						}
					]
				},
				"description": "Fetches customer records from the Customer_Info table. Can be filtered by 'email' query parameter."
			},
			"response": []
		},
		{
			"name": "Create Customer",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Name\": \"John Doe\",\n  \"Email\": \"john.doe@example.com\",\n  \"Phone\": \"123-456-7890\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/customers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"customers"
					]
				},
				"description": "Creates a new customer record in the Customer_Info table. Expects customer data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Customer by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Phone\": \"987-654-3210\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/customers/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<customer_id>",
							"description": "Customer ID"
						}
					]
				},
				"description": "Updates an existing customer record in the Customer_Info table, identified by 'id'. Expects updated customer data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Customer by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/customers/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<customer_id>",
							"description": "Customer ID"
						}
					]
				},
				"description": "Deletes a customer record from the Customer_Info table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Get Cart Items",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-items?sessionID=<session_id>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-items"
					],
					"query": [
						{
							"key": "sessionID",
							"value": "<session_id>",
							"description": "Session ID (optional filter)"
						}
					]
				},
				"description": "Fetches cart item records from the Cart_Items table. Can be filtered by 'sessionID' query parameter."
			},
			"response": []
		},
		{
			"name": "Add Item to Cart",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"SessionID\": \"<session_id>\",\n  \"ProductID\": \"STYLE123\",\n  \"Quantity\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-items",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-items"
					]
				},
				"description": "Creates a new cart item in the Cart_Items table. Expects cart item data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Cart Item by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Quantity\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-items/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-items",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<cart_item_id>",
							"description": "Cart Item ID"
						}
					]
				},
				"description": "Updates an existing cart item in the Cart_Items table, identified by 'id'. Expects updated cart item data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Cart Item by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-items/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-items",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<cart_item_id>",
							"description": "Cart Item ID"
						}
					]
				},
				"description": "Deletes a cart item from the Cart_Items table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Get Sizes for Cart Item",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-item-sizes?cartItemID=<cart_item_id>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-item-sizes"
					],
					"query": [
						{
							"key": "cartItemID",
							"value": "<cart_item_id>",
							"description": "Cart Item ID (optional filter)"
						}
					]
				},
				"description": "Fetches cart item size records from the Cart_Item_Sizes table. Can be filtered by 'cartItemID' query parameter."
			},
			"response": []
		},
		{
			"name": "Add Size Details to Cart Item",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"CartItemID\": \"<cart_item_id>\",\n  \"Size\": \"L\",\n  \"Quantity\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-item-sizes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-item-sizes"
					]
				},
				"description": "Creates a new cart item size record in the Cart_Item_Sizes table. Expects cart item size data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Size Details of Cart Item by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Quantity\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-item-sizes/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-item-sizes",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<cart_item_size_id>",
							"description": "Cart Item Size ID"
						}
					]
				},
				"description": "Updates an existing cart item size record in the Cart_Item_Sizes table, identified by 'id'. Expects updated data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Size Details of Cart Item by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-item-sizes/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-item-sizes",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<cart_item_size_id>",
							"description": "Cart Item Size ID"
						}
					]
				},
				"description": "Deletes a cart item size record from the Cart_Item_Sizes table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Get Cart Sessions",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-sessions?sessionID=<session_id>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-sessions"
					],
					"query": [
						{
							"key": "sessionID",
							"value": "<session_id>",
							"description": "Session ID (Caspio field, not PK) (optional filter)"
						}
					]
				},
				"description": "Fetches cart session records from the Cart_Sessions table. Can be filtered by 'sessionID' query parameter."
			},
			"response": []
		},
		{
			"name": "Create Cart Session",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"SessionID\": \"unique_session_string\",\n  \"UserID\": 123\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-sessions",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-sessions"
					]
				},
				"description": "Creates a new cart session in the Cart_Sessions table. Expects session data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Cart Session by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"IsActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/cart-sessions/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-sessions",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<session_pk_id>",
							"description": "Cart Session Primary Key ID"
						}
					]
				},
				"description": "Updates an existing cart session in the Cart_Sessions table, identified by 'id' (PK). Expects updated session data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Cart Session by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-sessions/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-sessions",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<session_pk_id>",
							"description": "Cart Session Primary Key ID"
						}
					]
				},
				"description": "Deletes a cart session from the Cart_Sessions table, identified by 'id' (PK)."
			},
			"response": []
		},
		{
			"name": "Get Orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/orders?customerID=<customer_id>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"orders"
					],
					"query": [
						{
							"key": "customerID",
							"value": "<customer_id>",
							"description": "Customer ID (optional filter)"
						}
					]
				},
				"description": "Fetches order records from the Orders table. Can be filtered by 'orderID', 'customerID', or 'orderStatus' query parameters."
			},
			"response": []
		},
		{
			"name": "Create Order",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"CustomerID\": 1,\n  \"TotalAmount\": 99.99,\n  \"OrderStatus\": \"New\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"orders"
					]
				},
				"description": "Creates a new order in the Orders table. Expects order data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Order by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"OrderStatus\": \"Shipped\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/orders/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"orders",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<order_id>",
							"description": "Order ID"
						}
					]
				},
				"description": "Updates an existing order in the Orders table, identified by 'id'. Expects updated order data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Order by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/orders/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"orders",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<order_id>",
							"description": "Order ID"
						}
					]
				},
				"description": "Deletes an order from the Orders table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Serve Cart Integration Script",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/cart-integration.js",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"cart-integration.js"
					]
				},
				"description": "Serves the cart-integration.js file for client-side cart functionality."
			},
			"response": []
		},
		{
			"name": "Redirect to Cart Integration Script",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cart-integration.js",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cart-integration.js"
					]
				},
				"description": "Redirects to /api/cart-integration.js."
			},
			"response": []
		},
		{
			"name": "Process Checkout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sessionId\": \"<session_id>\",\n  \"customerId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/process-checkout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"process-checkout"
					]
				},
				"description": "Processes a checkout by creating an order from cart items associated with a session. Expects 'sessionId' and 'customerId' in the request body."
			},
			"response": []
		},
		{
			"name": "Get Pricing Matrices",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix"
					]
				},
				"description": "Fetches pricing matrix records from the Pricing_Matrix table."
			},
			"response": []
		},
		{
			"name": "Lookup Pricing Matrix ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix/lookup?CustomerID=1&StyleNumber=PC61&ImprintType=DTG",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix",
						"lookup"
					],
					"query": [
						{
							"key": "CustomerID",
							"value": "1",
							"description": "Customer ID"
						},
						{
							"key": "StyleNumber",
							"value": "PC61",
							"description": "Style Number"
						},
						{
							"key": "ImprintType",
							"value": "DTG",
							"description": "Imprint Type"
						}
					]
				},
				"description": "Looks up a PricingMatrixID from the Pricing_Matrix table based on CustomerID, StyleNumber, and ImprintType. Requires 'CustomerID', 'StyleNumber', and 'ImprintType' query parameters."
			},
			"response": []
		},
		{
			"name": "Get Specific Pricing Matrix by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<matrix_id>",
							"description": "Pricing Matrix ID"
						}
					]
				},
				"description": "Fetches a specific pricing matrix record from the Pricing_Matrix table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Create Pricing Matrix",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"CustomerID\": 1,\n  \"StyleNumber\": \"PC61\",\n  \"ImprintType\": \"DTG\",\n  \"MatrixData\": {}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix"
					]
				},
				"description": "Creates a new pricing matrix record in the Pricing_Matrix table. Expects pricing matrix data in the request body."
			},
			"response": []
		},
		{
			"name": "Update Pricing Matrix by ID",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"MatrixData\": {\"updated_field\": \"new_value\"}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<matrix_id>",
							"description": "Pricing Matrix ID"
						}
					]
				},
				"description": "Updates an existing pricing matrix record in the Pricing_Matrix table, identified by 'id'. Expects updated data in the request body."
			},
			"response": []
		},
		{
			"name": "Delete Pricing Matrix by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/pricing-matrix/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"pricing-matrix",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<matrix_id>",
							"description": "Pricing Matrix ID"
						}
					]
				},
				"description": "Deletes a pricing matrix record from the Pricing_Matrix table, identified by 'id'."
			},
			"response": []
		},
		{
			"name": "Get Product Colors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/product-colors?styleNumber=PC61",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"product-colors"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						}
					]
				},
				"description": "Fetches product color information (color names, catalog colors, swatch images, and main product images) for a given styleNumber from the Sanmar_Bulk_251816_Feb2024 table. Requires 'styleNumber' query parameter."
			},
			"response": []
		},
		{
			"name": "Get Product Variant Sizes",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/product-variant-sizes?styleNumber=PC61&color=Aquatic%20Blue",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"product-variant-sizes"
					],
					"query": [
						{
							"key": "styleNumber",
							"value": "PC61",
							"description": "Style number of the product"
						},
						{
							"key": "color",
							"value": "Aquatic Blue",
							"description": "Color of the product (can also use colorName or catalogColor)"
						}
					]
				},
				"description": "Fetches unique sizes for a specific style and color combination. Gets STYLE, COLOR_NAME, and CATALOG_COLOR from Sanmar_Bulk_251816_Feb2024 table and sizes (with proper sorting) from the Inventory table. Requires 'styleNumber' and one of 'color', 'colorName', or 'catalogColor' query parameters."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://caspio-pricing-proxy-ab30a049961a.herokuapp.com",
			"type": "string"
		}
	]
}
