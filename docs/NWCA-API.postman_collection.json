{
	"info": {
		"name": "NWCA Production API - Complete",
		"description": "Complete API collection for Northwest Custom Apparel. Auto-generated from Express routes.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_postman_id": "6ece08ff-b668-4081-a062-cb02a2931869"
	},
	"item": [
		{
			"name": "üõçÔ∏è Product Search",
			"description": "Find products, colors, sizes, and check inventory",
			"item": [
				{
					"name": "Style Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/stylesearch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"stylesearch"
							],
							"query": [
								{
									"key": "term",
									"value": "PC54",
									"description": "Search term",
									"disabled": true
								}
							]
						},
						"description": "Search products by style number or name. Returns autocomplete suggestions."
					},
					"response": []
				},
				{
					"name": "Get Product Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/product-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"product-details"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								}
							]
						},
						"description": "Get complete product information including description, features, and specs."
					},
					"response": []
				},
				{
					"name": "Get Color Swatches",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/color-swatches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"color-swatches"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "Get color swatches with hex codes for visual display."
					},
					"response": []
				},
				{
					"name": "Get Products by Brand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products-by-brand",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products-by-brand"
							],
							"query": [
								{
									"key": "brand",
									"value": "Port & Company",
									"description": "Brand name",
									"disabled": true
								}
							]
						},
						"description": "Get all products from a specific brand."
					},
					"response": []
				},
				{
					"name": "Get Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products-by-category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products-by-category"
							],
							"query": [
								{
									"key": "category",
									"value": "T-Shirts",
									"description": "Category name",
									"disabled": true
								}
							]
						},
						"description": "Get all products in a category."
					},
					"response": []
				},
				{
					"name": "Get Products By Subcategory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products-by-subcategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products-by-subcategory"
							],
							"query": [
								{
									"key": "subcategory",
									"value": "",
									"description": "subcategory parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/products-by-subcategory"
					},
					"response": []
				},
				{
					"name": "Get All Brands",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/all-brands",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"all-brands"
							]
						},
						"description": "Get list of all available brands with logos. Returns brand name, logo URL, and sample product styles. Perfect for building brand showcase pages or brand filter menus."
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/all-categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"all-categories"
							]
						},
						"description": "Get list of all product categories."
					},
					"response": []
				},
				{
					"name": "Get All Subcategories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/all-subcategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"all-subcategories"
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"description": "q parameter",
									"disabled": true
								}
							]
						},
						"description": "Get list of all product subcategories."
					},
					"response": []
				},
				{
					"name": "Get Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"description": "q parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/search"
					},
					"response": []
				},
				{
					"name": "Get Featured Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/featured-products?// Search query\r\n      category=&// Filter by category (can be array)\r\n      subcategory=&// Filter by subcategory (can be array)\r\n      brand=&// Filter by brand (can be array)\r\n      color=&// Filter by color (can be array)\r\n      size=&// Filter by size (can be array)\r\n      minPrice=&// Minimum price filter\r\n      maxPrice=&// Maximum price filter\r\n      status = 'Active'=&// Product status filter (default to Active)\r\n      isTopSeller=&// Filter for top sellers only\r\n      sort = 'name_asc'=&// Sort order (default to name ascending)\r\n      page = 1=&// Page number (default: 1)\r\n      limit = 24=&// Results per page (default: 24=&max: 100)\r\n      includeFacets = false // Include aggregation counts=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"featured-products"
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"description": "q parameter",
									"disabled": true
								},
								{
									"key": "// Search query\r\n      category",
									"value": "",
									"description": "// Search query\r\n      category parameter",
									"disabled": false
								},
								{
									"key": "// Filter by category (can be array)\r\n      subcategory",
									"value": "",
									"description": "// Filter by category (can be array)\r\n      subcategory parameter",
									"disabled": false
								},
								{
									"key": "// Filter by subcategory (can be array)\r\n      brand",
									"value": "",
									"description": "// Filter by subcategory (can be array)\r\n      brand parameter",
									"disabled": false
								},
								{
									"key": "// Filter by brand (can be array)\r\n      color",
									"value": "",
									"description": "// Filter by brand (can be array)\r\n      color parameter",
									"disabled": false
								},
								{
									"key": "// Filter by color (can be array)\r\n      size",
									"value": "",
									"description": "// Filter by color (can be array)\r\n      size parameter",
									"disabled": false
								},
								{
									"key": "// Filter by size (can be array)\r\n      minPrice",
									"value": "",
									"description": "// Filter by size (can be array)\r\n      minPrice parameter",
									"disabled": false
								},
								{
									"key": "// Minimum price filter\r\n      maxPrice",
									"value": "",
									"description": "// Minimum price filter\r\n      maxPrice parameter",
									"disabled": false
								},
								{
									"key": "// Maximum price filter\r\n      status = 'Active'",
									"value": "",
									"description": "// Maximum price filter\r\n      status = 'Active' parameter",
									"disabled": false
								},
								{
									"key": "// Product status filter (default to Active)\r\n      isTopSeller",
									"value": "",
									"description": "// Product status filter (default to Active)\r\n      isTopSeller parameter",
									"disabled": false
								},
								{
									"key": "// Filter for top sellers only\r\n      sort = 'name_asc'",
									"value": "",
									"description": "// Filter for top sellers only\r\n      sort = 'name_asc' parameter",
									"disabled": false
								},
								{
									"key": "// Sort order (default to name ascending)\r\n      page = 1",
									"value": "",
									"description": "// Sort order (default to name ascending)\r\n      page = 1 parameter",
									"disabled": false
								},
								{
									"key": "// Page number (default: 1)\r\n      limit = 24",
									"value": "",
									"description": "// Page number (default: 1)\r\n      limit = 24 parameter",
									"disabled": false
								},
								{
									"key": "// Results per page (default: 24",
									"value": "",
									"description": "// Results per page (default: 24 parameter",
									"disabled": false
								},
								{
									"key": "max: 100)\r\n      includeFacets = false // Include aggregation counts",
									"value": "",
									"description": "max: 100)\r\n      includeFacets = false // Include aggregation counts parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/featured-products"
					},
					"response": []
				},
				{
					"name": "Enhanced Product Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/search?// Search query\r\n      category=&// Filter by category (can be array)\r\n      subcategory=&// Filter by subcategory (can be array)\r\n      brand=&// Filter by brand (can be array)\r\n      color=&// Filter by color (can be array)\r\n      size=&// Filter by size (can be array)\r\n      minPrice=&// Minimum price filter\r\n      maxPrice=&// Maximum price filter\r\n      status = 'Active'=&// Product status filter (default to Active)\r\n      isTopSeller=&// Filter for top sellers only\r\n      sort = 'name_asc'=&// Sort order (default to name ascending)\r\n      page = 1=&// Page number (default: 1)\r\n      limit = 24=&// Results per page (default: 24=&max: 100)\r\n      includeFacets = false // Include aggregation counts=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "polo",
									"description": "q parameter",
									"disabled": true
								},
								{
									"key": "// Search query\r\n      category",
									"value": "",
									"description": "// Search query\r\n      category parameter",
									"disabled": false
								},
								{
									"key": "// Filter by category (can be array)\r\n      subcategory",
									"value": "",
									"description": "// Filter by category (can be array)\r\n      subcategory parameter",
									"disabled": false
								},
								{
									"key": "// Filter by subcategory (can be array)\r\n      brand",
									"value": "",
									"description": "// Filter by subcategory (can be array)\r\n      brand parameter",
									"disabled": false
								},
								{
									"key": "// Filter by brand (can be array)\r\n      color",
									"value": "",
									"description": "// Filter by brand (can be array)\r\n      color parameter",
									"disabled": false
								},
								{
									"key": "// Filter by color (can be array)\r\n      size",
									"value": "",
									"description": "// Filter by color (can be array)\r\n      size parameter",
									"disabled": false
								},
								{
									"key": "// Filter by size (can be array)\r\n      minPrice",
									"value": "",
									"description": "// Filter by size (can be array)\r\n      minPrice parameter",
									"disabled": false
								},
								{
									"key": "// Minimum price filter\r\n      maxPrice",
									"value": "",
									"description": "// Minimum price filter\r\n      maxPrice parameter",
									"disabled": false
								},
								{
									"key": "// Maximum price filter\r\n      status = 'Active'",
									"value": "",
									"description": "// Maximum price filter\r\n      status = 'Active' parameter",
									"disabled": false
								},
								{
									"key": "// Product status filter (default to Active)\r\n      isTopSeller",
									"value": "",
									"description": "// Product status filter (default to Active)\r\n      isTopSeller parameter",
									"disabled": false
								},
								{
									"key": "// Filter for top sellers only\r\n      sort = 'name_asc'",
									"value": "",
									"description": "// Filter for top sellers only\r\n      sort = 'name_asc' parameter",
									"disabled": false
								},
								{
									"key": "// Sort order (default to name ascending)\r\n      page = 1",
									"value": "",
									"description": "// Sort order (default to name ascending)\r\n      page = 1 parameter",
									"disabled": false
								},
								{
									"key": "// Page number (default: 1)\r\n      limit = 24",
									"value": "",
									"description": "// Page number (default: 1)\r\n      limit = 24 parameter",
									"disabled": false
								},
								{
									"key": "// Results per page (default: 24",
									"value": "",
									"description": "// Results per page (default: 24 parameter",
									"disabled": false
								},
								{
									"key": "max: 100)\r\n      includeFacets = false // Include aggregation counts",
									"value": "",
									"description": "max: 100)\r\n      includeFacets = false // Include aggregation counts parameter",
									"disabled": false
								}
							]
						},
						"description": "üÜï Advanced product search with smart grouping by style, faceted filtering, and comprehensive product data. Groups multiple records by STYLE to eliminate duplicates and aggregates colors/sizes. Perfect for catalog search pages."
					},
					"response": []
				},
				{
					"name": "Get Product Colors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/product-colors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"product-colors"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "Get all available colors for a style. Used for color picker."
					},
					"response": []
				},
				{
					"name": "Get Products New",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/new?limit = 20=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"new"
							],
							"query": [
								{
									"key": "limit = 20",
									"value": "",
									"description": "limit = 20 parameter",
									"disabled": false
								},
								{
									"key": "category",
									"value": "Sweatshirts/Fleece",
									"description": "Category name",
									"disabled": true
								},
								{
									"key": "brand",
									"value": "Eddie Bauer",
									"description": "Brand name",
									"disabled": true
								}
							]
						},
						"description": "**Returns products marked as new (IsNew=1)**\n\nSupports filtering by category, brand, and limit. Results are cached for 5 minutes to reduce API calls.\n\n**Query Parameters:**\n- `limit` - Maximum number of results (default: 20, max: 100)\n- `category` - Filter by category name\n- `brand` - Filter by brand name\n\n**Examples:**\n- Get 20 newest products: `?limit=20`\n- Get new sweatshirts: `?category=Sweatshirts/Fleece`\n- Get new Eddie Bauer products: `?brand=Eddie Bauer`\n- Get 5 new OGIO polos: `?limit=5&brand=OGIO&category=Polos`\n\n**Response:**\n```json\n{\n  \"products\": [...],\n  \"count\": 20,\n  \"cached\": false\n}\n```"
					},
					"response": []
				},
				{
					"name": "Create Admin Products Add Isnew Field",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/products/add-isnew-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"products",
								"add-isnew-field"
							]
						},
						"description": "**Creates the IsNew boolean field in the products table**\n\nThis endpoint is idempotent - if field already exists, returns success message without error.\n\n**Request Body:**\nNo body needed.\n\n**Response (Success - Field Created):**\n```json\n{\n  \"success\": true,\n  \"message\": \"IsNew field created successfully\",\n  \"fieldName\": \"IsNew\"\n}\n```\n\n**Response (Success - Field Already Exists):**\n```json\n{\n  \"success\": true,\n  \"message\": \"IsNew field already exists\",\n  \"fieldName\": \"IsNew\",\n  \"alreadyExists\": true\n}\n```\n\n**Use Case:**\nRun this endpoint once to initialize the IsNew field in the Sanmar products table before marking products as new."
					},
					"response": []
				},
				{
					"name": "Create Admin Products Mark As New",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/products/mark-as-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"products",
								"mark-as-new"
							]
						},
						"description": "**Batch updates products to set IsNew=true**\n\nUpdates ALL variants (colors, sizes) for each style number provided. One style can have dozens of records (one per color+size combination).\n\n**Request Body:**\n```json\n{\n  \"styles\": [\"EB120\", \"EB121\", \"EB122\", ...]\n}\n```\n\n**Response (Success):**\n```json\n{\n  \"success\": true,\n  \"message\": \"Successfully marked 150 records as new\",\n  \"recordsAffected\": 150,\n  \"styles\": [\"EB120\", \"EB121\", ...],\n  \"styleCount\": 15\n}\n```\n\n**Example Body (15 Featured Products):**\nThe body in this request contains 15 style numbers that will be marked as new:\n- Eddie Bauer Fleece Collection (EB120-EB131)\n- OGIO Polos (OG734-OG735)\n- Port & Company Core Tees (PC54, PC55, LPC54)\n- Sport-Tek Performance Tees (ST350, LST350)\n\n**Notes:**\n- Each style may have 10-30 variants (different colors/sizes)\n- Total records affected = style count √ó variants per style\n- Use this to feature new arrivals or seasonal favorites"
					},
					"response": []
				},
				{
					"name": "Create Admin Products Clear Isnew",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/products/clear-isnew",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"products",
								"clear-isnew"
							]
						},
						"description": "POST /api/admin/products/clear-isnew Clear IsNew field from all products (set to false)  Purpose: Reset the IsNew field when too many products were incorrectly marked  Response: { success, message, recordsAffected }"
					},
					"response": []
				},
				{
					"name": "Check Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/inventory?styleNumber={{styleNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"inventory"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								}
							]
						},
						"description": "Check real-time inventory levels by size and color."
					},
					"response": []
				},
				{
					"name": "Get Sizes by Style & Color",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sizes-by-style-color?styleNumber={{styleNumber}}&color={{color}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sizes-by-style-color"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								},
								{
									"key": "color",
									"value": "{{color}}"
								}
							]
						},
						"description": "Get available sizes for specific style/color combination."
					},
					"response": []
				},
				{
					"name": "Get Product Search Index",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "üí∞ Pricing",
			"description": "Pricing tiers, costs, and rules",
			"item": [
				{
					"name": "Get Pricing Tiers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-tiers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-tiers"
							],
							"query": [
								{
									"key": "method",
									"value": "",
									"description": "method parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/pricing-tiers"
					},
					"response": []
				},
				{
					"name": "Get Embroidery Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/embroidery-costs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"embroidery-costs"
							],
							"query": [
								{
									"key": "itemType",
									"value": "",
									"description": "itemType parameter",
									"disabled": true
								},
								{
									"key": "stitchCount",
									"value": "",
									"description": "stitchCount parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/embroidery-costs"
					},
					"response": []
				},
				{
					"name": "Get Dtg Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/dtg-costs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"dtg-costs"
							],
							"query": [
								{
									"key": "costType",
									"value": "",
									"description": "costType parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/dtg-costs"
					},
					"response": []
				},
				{
					"name": "Get Screenprint Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/screenprint-costs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"screenprint-costs"
							],
							"query": [
								{
									"key": "costType",
									"value": "",
									"description": "costType parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/screenprint-costs"
					},
					"response": []
				},
				{
					"name": "Get Pricing Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-rules"
							],
							"query": [
								{
									"key": "method",
									"value": "",
									"description": "method parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/pricing-rules"
					},
					"response": []
				},
				{
					"name": "Get Base Item Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/base-item-costs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"base-item-costs"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/base-item-costs"
					},
					"response": []
				},
				{
					"name": "Get Size Pricing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/size-pricing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"size-pricing"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								}
							]
						},
						"description": "GET /api/size-pricing"
					},
					"response": []
				},
				{
					"name": "Get Max Prices By Style",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/max-prices-by-style",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"max-prices-by-style"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/max-prices-by-style"
					},
					"response": []
				},
				{
					"name": "Get Pricing Bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-bundle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-bundle"
							],
							"query": [
								{
									"key": "method",
									"value": "",
									"description": "method parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/pricing-bundle"
					},
					"response": []
				}
			]
		},
		{
			"name": "üí∞ Pricing Matrix",
			"description": "Pricing matrix management",
			"item": [
				{
					"name": "Get Pricing Matrix",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								},
								{
									"key": "embellishmentType",
									"value": "",
									"description": "embellishmentType parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "pricingMatrixID",
									"value": "",
									"description": "pricingMatrixID parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/pricing-matrix"
					},
					"response": []
				},
				{
					"name": "Get Pricing Matrix Lookup",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix",
								"lookup"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								},
								{
									"key": "embellishmentType",
									"value": "",
									"description": "embellishmentType parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/pricing-matrix/lookup"
					},
					"response": []
				},
				{
					"name": "Get Single Pricing Matrix",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix",
								":id"
							]
						},
						"description": "GET /api/pricing-matrix/:id"
					},
					"response": []
				},
				{
					"name": "Create Pricing Matrix",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix"
							]
						},
						"description": "POST /api/pricing-matrix",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"TierStructure\": \"value\",\n  \"SizeGroups\": \"value\",\n  \"PriceMatrix\": 10.99\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Pricing Matrix",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix",
								":id"
							]
						},
						"description": "PUT /api/pricing-matrix/:id"
					},
					"response": []
				},
				{
					"name": "Delete Pricing Matrix",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix",
								":id"
							]
						},
						"description": "DELETE /api/pricing-matrix/:id"
					},
					"response": []
				}
			]
		},
		{
			"name": "üõí Cart Management",
			"description": "Shopping cart sessions and items",
			"item": [
				{
					"name": "Get Cart Sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-sessions"
							],
							"query": [
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "userID",
									"value": "",
									"description": "userID parameter",
									"disabled": true
								},
								{
									"key": "isActive",
									"value": "",
									"description": "isActive parameter",
									"disabled": true
								}
							]
						},
						"description": "Get all cart sessions. Each session represents one customer's cart."
					},
					"response": []
				},
				{
					"name": "Create Cart Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-sessions"
							]
						},
						"description": "Create new cart session for a customer.",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SessionID\": 1,\n  \"UserID\": 1,\n  \"IPAddress\": \"value\",\n  \"UserAgent\": \"value\",\n  \"IsActive\": true,\n  \"LastActivity\": \"value\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Cart Sessions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-sessions",
								":id"
							]
						},
						"description": "PUT /api/cart-sessions/:id",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SessionID\": 1,\n  \"UserID\": 1,\n  \"LastActivity\": \"value\",\n  \"IPAddress\": \"value\",\n  \"UserAgent\": \"value\",\n  \"IsActive\": true\n}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Cart Sessions",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-sessions",
								":id"
							],
							"query": [
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "productID",
									"value": "",
									"description": "productID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								},
								{
									"key": "cartStatus",
									"value": "",
									"description": "cartStatus parameter",
									"disabled": true
								},
								{
									"key": "orderID",
									"value": "",
									"description": "orderID parameter",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/cart-sessions/:id"
					},
					"response": []
				},
				{
					"name": "Get Cart Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-items"
							],
							"query": [
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "productID",
									"value": "",
									"description": "productID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								},
								{
									"key": "cartStatus",
									"value": "",
									"description": "cartStatus parameter",
									"disabled": true
								},
								{
									"key": "orderID",
									"value": "",
									"description": "orderID parameter",
									"disabled": true
								}
							]
						},
						"description": "Get all cart items across all sessions."
					},
					"response": []
				},
				{
					"name": "Add Cart Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-items"
							]
						},
						"description": "Add product to cart. Requires ProductID and SessionID.",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SessionID\": 1,\n  \"ProductID\": 1,\n  \"StyleNumber\": \"value\",\n  \"Color\": \"value\",\n  \"PRODUCT_TITLE\": \"value\",\n  \"ImprintType\": \"value\",\n  \"CartStatus\": \"Active\",\n  \"OrderID\": 1,\n  \"imageUrl\": \"value\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Cart Items",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-items",
								":id"
							]
						},
						"description": "PUT /api/cart-items/:id",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SessionID\": 1,\n  \"ProductID\": 1,\n  \"StyleNumber\": \"value\",\n  \"Color\": \"value\",\n  \"PRODUCT_TITLE\": \"value\",\n  \"ImprintType\": \"value\",\n  \"CartStatus\": \"Active\",\n  \"OrderID\": 1,\n  \"imageUrl\": \"value\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Cart Items",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-items/:id?CartItemID=&cartitemid=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-items",
								":id"
							],
							"query": [
								{
									"key": "cartItemID",
									"value": "",
									"description": "cartItemID parameter",
									"disabled": true
								},
								{
									"key": "CartItemID",
									"value": "",
									"description": "CartItemID parameter",
									"disabled": false
								},
								{
									"key": "cartitemid",
									"value": "",
									"description": "cartitemid parameter",
									"disabled": false
								},
								{
									"key": "size",
									"value": "",
									"description": "size parameter",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/cart-items/:id"
					},
					"response": []
				},
				{
					"name": "Get Cart Item Sizes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-item-sizes?CartItemID=&cartitemid=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-item-sizes"
							],
							"query": [
								{
									"key": "cartItemID",
									"value": "",
									"description": "cartItemID parameter",
									"disabled": true
								},
								{
									"key": "CartItemID",
									"value": "",
									"description": "CartItemID parameter",
									"disabled": false
								},
								{
									"key": "cartitemid",
									"value": "",
									"description": "cartitemid parameter",
									"disabled": false
								},
								{
									"key": "size",
									"value": "",
									"description": "size parameter",
									"disabled": true
								}
							]
						},
						"description": "Get size breakdown for cart items (e.g., 10 Small, 15 Medium)."
					},
					"response": []
				},
				{
					"name": "Create Cart Item Sizes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-item-sizes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-item-sizes"
							]
						},
						"description": "POST /api/cart-item-sizes",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"CartItemID\": 1,\n  \"Size\": \"value\",\n  \"Quantity\": 1,\n  \"UnitPrice\": 10.99\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Cart Item Sizes",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/cart-item-sizes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-item-sizes",
								":id"
							]
						},
						"description": "PUT /api/cart-item-sizes/:id",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"CartItemID\": 1,\n  \"Size\": \"value\",\n  \"Quantity\": 1,\n  \"UnitPrice\": 10.99\n}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Cart Item Sizes",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-item-sizes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-item-sizes",
								":id"
							]
						},
						"description": "DELETE /api/cart-item-sizes/:id"
					},
					"response": []
				},
				{
					"name": "Get Cart Integration.js",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-integration.js",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-integration.js"
							]
						},
						"description": "GET /api/cart-integration.js - Serve cart integration JavaScript"
					},
					"response": []
				}
			]
		},
		{
			"name": "üì¶ Orders",
			"description": "Order management and tracking",
			"item": [
				{
					"name": "Get Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "orderID",
									"value": "",
									"description": "orderID parameter",
									"disabled": true
								},
								{
									"key": "customerID",
									"value": "",
									"description": "customerID parameter",
									"disabled": true
								},
								{
									"key": "orderStatus",
									"value": "",
									"description": "orderStatus parameter",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "",
									"description": "paymentStatus parameter",
									"disabled": true
								},
								{
									"key": "imprintType",
									"value": "",
									"description": "imprintType parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/orders"
					},
					"response": []
				},
				{
					"name": "Create Orders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "POST /api/orders",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"OrderNumber\": \"value\",\n  \"SessionID\": 1,\n  \"TotalAmount\": \"value\",\n  \"OrderStatus\": \"Active\",\n  \"ImprintType\": \"value\",\n  \"PaymentMethod\": \"value\",\n  \"PaymentStatus\": \"Active\",\n  \"ShippingMethod\": \"value\",\n  \"TrackingNumber\": \"value\",\n  \"EstimatedDelivery\": \"value\",\n  \"Notes\": \"Description here\",\n  \"InternalNotes\": \"Description here\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Orders",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								":id"
							]
						},
						"description": "PUT /api/orders/:id"
					},
					"response": []
				},
				{
					"name": "Delete Orders",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								":id"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "name parameter",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"description": "email parameter",
									"disabled": true
								},
								{
									"key": "company",
									"value": "",
									"description": "company parameter",
									"disabled": true
								},
								{
									"key": "customerID",
									"value": "",
									"description": "customerID parameter",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/orders/:id"
					},
					"response": []
				},
				{
					"name": "Get Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "name parameter",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"description": "email parameter",
									"disabled": true
								},
								{
									"key": "company",
									"value": "",
									"description": "company parameter",
									"disabled": true
								},
								{
									"key": "customerID",
									"value": "",
									"description": "customerID parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/customers"
					},
					"response": []
				},
				{
					"name": "Create Customers",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "POST /api/customers"
					},
					"response": []
				},
				{
					"name": "Update Customers",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								":id"
							]
						},
						"description": "PUT /api/customers/:id"
					},
					"response": []
				},
				{
					"name": "Delete Customers",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers",
								":id"
							],
							"query": [
								{
									"key": "q.where",
									"value": "",
									"description": "Filter records using SQL-like WHERE clause",
									"disabled": true
								},
								{
									"key": "q.orderBy",
									"value": "",
									"description": "Sort order (e.g., \"Field ASC\" or \"Field DESC\")",
									"disabled": true
								},
								{
									"key": "q.limit",
									"value": "",
									"description": "Maximum number of records to return (1-1000)",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/customers/:id"
					},
					"response": []
				},
				{
					"name": "Get Order Odbc",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/order-odbc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"order-odbc"
							],
							"query": [
								{
									"key": "q.where",
									"value": "",
									"description": "Filter records using SQL-like WHERE clause",
									"disabled": true
								},
								{
									"key": "q.orderBy",
									"value": "",
									"description": "Sort order (e.g., \"Field ASC\" or \"Field DESC\")",
									"disabled": true
								},
								{
									"key": "q.limit",
									"value": "",
									"description": "Maximum number of records to return (1-1000)",
									"disabled": true
								},
								{
									"key": "days",
									"value": "",
									"description": "Number of days",
									"disabled": true
								},
								{
									"key": "includeDetails",
									"value": "",
									"description": "Include detailed information",
									"disabled": true
								},
								{
									"key": "compareYoY",
									"value": "",
									"description": "Include year-over-year comparison",
									"disabled": true
								}
							]
						},
						"description": "GET /api/order-odbc"
					},
					"response": []
				},
				{
					"name": "Get Order Dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/order-dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"order-dashboard"
							],
							"query": [
								{
									"key": "days",
									"value": "",
									"description": "Number of days",
									"disabled": true
								},
								{
									"key": "includeDetails",
									"value": "",
									"description": "Include detailed information",
									"disabled": true
								},
								{
									"key": "compareYoY",
									"value": "",
									"description": "Include year-over-year comparison",
									"disabled": true
								}
							]
						},
						"description": "GET /api/order-dashboard"
					},
					"response": []
				}
			]
		},
		{
			"name": "üí¨ Quotes",
			"description": "Quote analytics, items, and sessions",
			"item": [
				{
					"name": "Get Quote_analytics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics"
							],
							"query": [
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "eventType",
									"value": "",
									"description": "eventType parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_analytics"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_analytics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							]
						},
						"description": "GET /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_analytics",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics"
							]
						},
						"description": "POST /api/quote_analytics"
					},
					"response": []
				},
				{
					"name": "Update Quote_analytics",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							]
						},
						"description": "PUT /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_analytics",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Get Quote_items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_items"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							]
						},
						"description": "GET /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_items",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items"
							]
						},
						"description": "POST /api/quote_items - ENHANCED WITH DEBUGGING"
					},
					"response": []
				},
				{
					"name": "Update Quote_items",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							]
						},
						"description": "PUT /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_items",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "customerEmail",
									"value": "",
									"description": "customerEmail parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Get Quote_sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "customerEmail",
									"value": "",
									"description": "customerEmail parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_sessions"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "GET /api/quote_sessions/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_sessions",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions"
							]
						},
						"description": "POST /api/quote_sessions"
					},
					"response": []
				},
				{
					"name": "Update Quote_sessions",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "PUT /api/quote_sessions/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_sessions",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "DELETE /api/quote_sessions/:id"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä Inventory",
			"description": "Inventory levels and availability",
			"item": [
				{
					"name": "Get Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"inventory"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								}
							]
						},
						"description": "GET /api/inventory"
					},
					"response": []
				},
				{
					"name": "Get Sizes By Style Color",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sizes-by-style-color",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sizes-by-style-color"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								}
							]
						},
						"description": "GET /api/sizes-by-style-color"
					},
					"response": []
				}
			]
		},
		{
			"name": "üé® Art & Invoicing",
			"description": "Art request and invoice management system",
			"item": [
				{
					"name": "Get Art Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests"
							],
							"query": [
								{
									"key": "pk_id",
									"value": "",
									"description": "pk_id parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								},
								{
									"key": "id_design",
									"value": "",
									"description": "id_design parameter",
									"disabled": true
								},
								{
									"key": "companyName",
									"value": "",
									"description": "companyName parameter",
									"disabled": true
								},
								{
									"key": "customerServiceRep",
									"value": "",
									"description": "customerServiceRep parameter",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "",
									"description": "priority parameter",
									"disabled": true
								},
								{
									"key": "mockup",
									"value": "",
									"description": "mockup parameter",
									"disabled": true
								},
								{
									"key": "orderType",
									"value": "",
									"description": "orderType parameter",
									"disabled": true
								},
								{
									"key": "customerType",
									"value": "",
									"description": "customerType parameter",
									"disabled": true
								},
								{
									"key": "happyStatus",
									"value": "",
									"description": "happyStatus parameter",
									"disabled": true
								},
								{
									"key": "salesRep",
									"value": "",
									"description": "salesRep parameter",
									"disabled": true
								},
								{
									"key": "id_customer",
									"value": "",
									"description": "id_customer parameter",
									"disabled": true
								},
								{
									"key": "id_contact",
									"value": "",
									"description": "id_contact parameter",
									"disabled": true
								},
								{
									"key": "dateCreatedFrom",
									"value": "",
									"description": "dateCreatedFrom parameter",
									"disabled": true
								},
								{
									"key": "dateCreatedTo",
									"value": "",
									"description": "dateCreatedTo parameter",
									"disabled": true
								},
								{
									"key": "dueDateFrom",
									"value": "",
									"description": "dueDateFrom parameter",
									"disabled": true
								},
								{
									"key": "dueDateTo",
									"value": "",
									"description": "dueDateTo parameter",
									"disabled": true
								},
								{
									"key": "select",
									"value": "",
									"description": "select parameter",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "orderBy parameter",
									"disabled": true
								},
								{
									"key": "groupBy",
									"value": "",
									"description": "groupBy parameter",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "",
									"description": "pageNumber parameter",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "",
									"description": "pageSize parameter",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Maximum results",
									"disabled": true
								}
							]
						},
						"description": "Get list of art requests. Filter by status, company, or sales rep."
					},
					"response": []
				},
				{
					"name": "Get Single Artrequests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests",
								":id"
							]
						},
						"description": "Get a specific art request by ID"
					},
					"response": []
				},
				{
					"name": "Create Art Request",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests"
							]
						},
						"description": "Create new art request. Accepts any fields from the ArtRequests table."
					},
					"response": []
				},
				{
					"name": "Update Artrequests",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests",
								":id"
							]
						},
						"description": "Update an art request by ID"
					},
					"response": []
				},
				{
					"name": "Delete Artrequests",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests",
								":id"
							],
							"query": [
								{
									"key": "invoiceID",
									"value": "",
									"description": "invoiceID parameter",
									"disabled": true
								},
								{
									"key": "artRequestID",
									"value": "",
									"description": "artRequestID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								},
								{
									"key": "artistName",
									"value": "",
									"description": "artistName parameter",
									"disabled": true
								},
								{
									"key": "customerName",
									"value": "",
									"description": "customerName parameter",
									"disabled": true
								},
								{
									"key": "customerCompany",
									"value": "",
									"description": "customerCompany parameter",
									"disabled": true
								},
								{
									"key": "projectName",
									"value": "",
									"description": "projectName parameter",
									"disabled": true
								},
								{
									"key": "isDeleted",
									"value": "",
									"description": "isDeleted parameter",
									"disabled": true
								}
							]
						},
						"description": "Delete an art request by ID"
					},
					"response": []
				},
				{
					"name": "Get Art Invoices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/art-invoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"art-invoices"
							],
							"query": [
								{
									"key": "invoiceID",
									"value": "",
									"description": "invoiceID parameter",
									"disabled": true
								},
								{
									"key": "artRequestID",
									"value": "",
									"description": "artRequestID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								},
								{
									"key": "artistName",
									"value": "",
									"description": "artistName parameter",
									"disabled": true
								},
								{
									"key": "customerName",
									"value": "",
									"description": "customerName parameter",
									"disabled": true
								},
								{
									"key": "customerCompany",
									"value": "",
									"description": "customerCompany parameter",
									"disabled": true
								},
								{
									"key": "projectName",
									"value": "",
									"description": "projectName parameter",
									"disabled": true
								},
								{
									"key": "isDeleted",
									"value": "",
									"description": "isDeleted parameter",
									"disabled": true
								}
							]
						},
						"description": "Get list of art invoices. Shows all invoices with status, customer, and balance info."
					},
					"response": []
				},
				{
					"name": "Get Single Art Invoices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/art-invoices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"art-invoices",
								":id"
							]
						},
						"description": "Get a specific art invoice by ID"
					},
					"response": []
				},
				{
					"name": "Create Art Invoice",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/art-invoices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"art-invoices"
							]
						},
						"description": "Create a new art invoice. Links to art request and tracks time/billing."
					},
					"response": []
				},
				{
					"name": "Update Art Invoices",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/art-invoices/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"art-invoices",
								":id"
							]
						},
						"description": "Update an art invoice by ID"
					},
					"response": []
				},
				{
					"name": "Delete Art Invoices",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/art-invoices/:id?limit=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"art-invoices",
								":id"
							],
							"query": [
								{
									"key": "id_design",
									"value": "",
									"description": "id_design parameter",
									"disabled": true
								},
								{
									"key": "note_type",
									"value": "",
									"description": "note_type parameter",
									"disabled": true
								},
								{
									"key": "note_by",
									"value": "",
									"description": "note_by parameter",
									"disabled": true
								},
								{
									"key": "parent_note_id",
									"value": "",
									"description": "parent_note_id parameter",
									"disabled": true
								},
								{
									"key": "date_from",
									"value": "",
									"description": "date_from parameter",
									"disabled": true
								},
								{
									"key": "date_to",
									"value": "",
									"description": "date_to parameter",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "orderBy parameter",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "Maximum results",
									"disabled": false
								}
							]
						},
						"description": "Delete an art invoice by ID"
					},
					"response": []
				},
				{
					"name": "Get Design Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/design-notes?limit=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"design-notes"
							],
							"query": [
								{
									"key": "id_design",
									"value": "",
									"description": "id_design parameter",
									"disabled": true
								},
								{
									"key": "note_type",
									"value": "",
									"description": "note_type parameter",
									"disabled": true
								},
								{
									"key": "note_by",
									"value": "",
									"description": "note_by parameter",
									"disabled": true
								},
								{
									"key": "parent_note_id",
									"value": "",
									"description": "parent_note_id parameter",
									"disabled": true
								},
								{
									"key": "date_from",
									"value": "",
									"description": "date_from parameter",
									"disabled": true
								},
								{
									"key": "date_to",
									"value": "",
									"description": "date_to parameter",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "",
									"description": "orderBy parameter",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"description": "Maximum results",
									"disabled": false
								}
							]
						},
						"description": "GET /api/design-notes - List all design notes with filtering"
					},
					"response": []
				},
				{
					"name": "Get Single Design Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/design-notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"design-notes",
								":id"
							]
						},
						"description": "GET /api/design-notes/:id - Get single design note by Note_ID"
					},
					"response": []
				},
				{
					"name": "Create Design Notes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/design-notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"design-notes"
							]
						},
						"description": "POST /api/design-notes - Create new design note",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Note_By\": \"value\",\n  \"Parent_Note_ID\": 1,\n  \"Note_Type\": \"value\",\n  \"Note_Text\": \"value\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Update Design Notes",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/design-notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"design-notes",
								":id"
							]
						},
						"description": "PUT /api/design-notes/:id - Update existing design note",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Note_Type\": \"value\",\n  \"Note_Text\": \"value\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Design Notes",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/design-notes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"design-notes",
								":id"
							]
						},
						"description": "DELETE /api/design-notes/:id - Delete design note"
					},
					"response": []
				},
				{
					"name": "Get DesignNotes",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Update Art Request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests",
								"{{id}}"
							]
						},
						"description": "Update existing art request. Accepts any fields from the ArtRequests table.",
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Status\": \"Completed\",\n  \"Invoiced\": true,\n  \"Invoiced_Date\": \"2025-01-15\"\n}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Art Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/artrequests/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"artrequests",
								"{{id}}"
							]
						},
						"description": "Delete art request by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "üé® Transfers",
			"description": "Transfer printing pricing and management",
			"item": [
				{
					"name": "Get Transfer Price",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers",
								"lookup"
							],
							"query": [
								{
									"key": "size",
									"value": "Adult",
									"description": "size parameter",
									"disabled": true
								},
								{
									"key": "quantity",
									"value": "10",
									"description": "quantity parameter",
									"disabled": true
								},
								{
									"key": "price_type",
									"value": "Regular",
									"description": "price_type parameter",
									"disabled": true
								}
							]
						},
						"description": "Lookup transfer price by size and quantity"
					},
					"response": []
				},
				{
					"name": "Get Transfer Matrix",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers/matrix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers",
								"matrix"
							],
							"query": [
								{
									"key": "size",
									"value": "Adult",
									"description": "size parameter",
									"disabled": true
								},
								{
									"key": "price_type",
									"value": "",
									"description": "price_type parameter",
									"disabled": true
								}
							]
						},
						"description": "Get transfer pricing matrix for a size"
					},
					"response": []
				},
				{
					"name": "Get Transfer Sizes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers/sizes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers",
								"sizes"
							]
						},
						"description": "Get all available transfer sizes"
					},
					"response": []
				},
				{
					"name": "Get Transfers Price Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers/price-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers",
								"price-types"
							]
						},
						"description": "GET /api/transfers/price-types - Available price types"
					},
					"response": []
				},
				{
					"name": "Get Transfers Quantity Ranges",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers/quantity-ranges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers",
								"quantity-ranges"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"description": "Record ID",
									"disabled": true
								},
								{
									"key": "product_type",
									"value": "",
									"description": "product_type parameter",
									"disabled": true
								},
								{
									"key": "size",
									"value": "",
									"description": "size parameter",
									"disabled": true
								},
								{
									"key": "price_type",
									"value": "",
									"description": "price_type parameter",
									"disabled": true
								},
								{
									"key": "quantity_range",
									"value": "",
									"description": "quantity_range parameter",
									"disabled": true
								},
								{
									"key": "min_quantity",
									"value": "",
									"description": "min_quantity parameter",
									"disabled": true
								},
								{
									"key": "max_quantity",
									"value": "",
									"description": "max_quantity parameter",
									"disabled": true
								},
								{
									"key": "active",
									"value": "",
									"description": "active parameter",
									"disabled": true
								},
								{
									"key": "currency",
									"value": "",
									"description": "currency parameter",
									"disabled": true
								},
								{
									"key": "orderby",
									"value": "",
									"description": "orderby parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/transfers/quantity-ranges - Available quantity ranges"
					},
					"response": []
				},
				{
					"name": "Get Transfers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"description": "Record ID",
									"disabled": true
								},
								{
									"key": "product_type",
									"value": "",
									"description": "product_type parameter",
									"disabled": true
								},
								{
									"key": "size",
									"value": "",
									"description": "size parameter",
									"disabled": true
								},
								{
									"key": "price_type",
									"value": "",
									"description": "price_type parameter",
									"disabled": true
								},
								{
									"key": "quantity_range",
									"value": "",
									"description": "quantity_range parameter",
									"disabled": true
								},
								{
									"key": "min_quantity",
									"value": "",
									"description": "min_quantity parameter",
									"disabled": true
								},
								{
									"key": "max_quantity",
									"value": "",
									"description": "max_quantity parameter",
									"disabled": true
								},
								{
									"key": "active",
									"value": "",
									"description": "active parameter",
									"disabled": true
								},
								{
									"key": "currency",
									"value": "",
									"description": "currency parameter",
									"disabled": true
								},
								{
									"key": "orderby",
									"value": "",
									"description": "orderby parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/transfers - General query endpoint"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìÖ Production",
			"description": "Production schedules and tracking",
			"item": [
				{
					"name": "Get Production Schedules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/production-schedules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"production-schedules"
							],
							"query": [
								{
									"key": "q.where",
									"value": "",
									"description": "Filter records using SQL-like WHERE clause",
									"disabled": true
								},
								{
									"key": "q.orderBy",
									"value": "",
									"description": "Sort order (e.g., \"Field ASC\" or \"Field DESC\")",
									"disabled": true
								},
								{
									"key": "q.limit",
									"value": "",
									"description": "Maximum number of records to return (1-1000)",
									"disabled": true
								}
							]
						},
						"description": "Example: /api/production-schedules?q.orderBy=Date DESC&q.limit=50"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìé File Management",
			"description": "File upload, download, and management",
			"item": [
				{
					"name": "Create Files Upload",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								"upload"
							]
						},
						"description": "POST /api/files/upload Upload a file directly to Caspio Files API Expects multipart/form-data with a 'file' field"
					},
					"response": []
				},
				{
					"name": "Get Files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey"
							]
						},
						"description": "GET /api/files/:externalKey Retrieve a file from Caspio by its ExternalKey"
					},
					"response": []
				},
				{
					"name": "Get Files Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey",
								"info"
							]
						},
						"description": "GET /api/files/:externalKey/info Get file metadata without downloading the file"
					},
					"response": []
				},
				{
					"name": "Delete Files",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey"
							]
						},
						"description": "DELETE /api/files/:externalKey Delete a file from Caspio"
					},
					"response": []
				},
				{
					"name": "Create Files Upload",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								"upload"
							]
						},
						"description": "POST /api/files/upload Upload a file directly to Caspio Files API Expects multipart/form-data with a 'file' field"
					},
					"response": []
				},
				{
					"name": "Get Files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey"
							]
						},
						"description": "GET /api/files/:externalKey Retrieve a file from Caspio by its ExternalKey"
					},
					"response": []
				},
				{
					"name": "Get Files Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey",
								"info"
							]
						},
						"description": "GET /api/files/:externalKey/info Get file metadata without downloading the file"
					},
					"response": []
				},
				{
					"name": "Delete Files",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/files/:externalKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"files",
								":externalKey"
							]
						},
						"description": "DELETE /api/files/:externalKey Delete a file from Caspio"
					},
					"response": []
				},
				{
					"name": "Create Quote Items With File",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote-items-with-file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote-items-with-file"
							]
						},
						"description": "POST /api/quote-items-with-file Create a quote item with optional file upload If ImageUpload field contains base64 data, uploads file first"
					},
					"response": []
				}
			]
		},
		{
			"name": "üñ®Ô∏è DTG Printing",
			"description": "Direct-to-garment printing services",
			"item": [
				{
					"name": "Get Product Bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/product-bundle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"product-bundle"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								}
							]
						},
						"description": "Optimized endpoint that combines product, pricing, and DTG data in a single request"
					},
					"response": []
				}
			]
		},
		{
			"name": "üîß Utilities",
			"description": "Utility endpoints and helpers",
			"item": [
				{
					"name": "Get Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"status"
							]
						},
						"description": "GET /status"
					},
					"response": []
				},
				{
					"name": "Get Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test"
							]
						},
						"description": "GET /test"
					},
					"response": []
				},
				{
					"name": "Get Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "GET /api/health - Health check endpoint with comprehensive info"
					},
					"response": []
				},
				{
					"name": "Get Cart Integration.js",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart-integration.js",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"cart-integration.js"
							],
							"query": [
								{
									"key": "category",
									"value": "",
									"description": "Category name",
									"disabled": true
								}
							]
						},
						"description": "GET /api/cart-integration.js"
					},
					"response": []
				},
				{
					"name": "Get Subcategories By Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/subcategories-by-category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"subcategories-by-category"
							],
							"query": [
								{
									"key": "category",
									"value": "",
									"description": "Category name",
									"disabled": true
								}
							]
						},
						"description": "GET /api/subcategories-by-category"
					},
					"response": []
				},
				{
					"name": "Get Products By Category Subcategory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products-by-category-subcategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products-by-category-subcategory"
							],
							"query": [
								{
									"key": "category",
									"value": "",
									"description": "Category name",
									"disabled": true
								},
								{
									"key": "subcategory",
									"value": "",
									"description": "subcategory parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/products-by-category-subcategory"
					},
					"response": []
				},
				{
					"name": "Get Related Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/related-products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"related-products"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/related-products"
					},
					"response": []
				},
				{
					"name": "Get Filter Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/filter-products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"filter-products"
							],
							"query": [
								{
									"key": "category",
									"value": "",
									"description": "Category name",
									"disabled": true
								},
								{
									"key": "subcategory",
									"value": "",
									"description": "subcategory parameter",
									"disabled": true
								},
								{
									"key": "color",
									"value": "",
									"description": "Product color",
									"disabled": true
								},
								{
									"key": "brand",
									"value": "",
									"description": "Brand name",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "",
									"description": "minPrice parameter",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "",
									"description": "maxPrice parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/filter-products"
					},
					"response": []
				},
				{
					"name": "Get Quick View",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quick-view",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quick-view"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quick-view"
					},
					"response": []
				},
				{
					"name": "Get Compare Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/compare-products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"compare-products"
							],
							"query": [
								{
									"key": "styles",
									"value": "",
									"description": "styles parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/compare-products"
					},
					"response": []
				},
				{
					"name": "Get Recommendations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/recommendations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"recommendations"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/recommendations"
					},
					"response": []
				},
				{
					"name": "Get Test Sanmar Bulk",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/test-sanmar-bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test-sanmar-bulk"
							]
						},
						"description": "GET /api/test-sanmar-bulk"
					},
					"response": []
				},
				{
					"name": "Get Staff Announcements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/staff-announcements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"staff-announcements"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"description": "type parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/staff-announcements"
					},
					"response": []
				},
				{
					"name": "Get Locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"locations"
							],
							"query": [
								{
									"key": "type",
									"value": "",
									"description": "type parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/locations"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìã General",
			"description": "",
			"item": [
				{
					"name": "Create Orders Create",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"create"
							]
						},
						"description": "Create a new create record"
					},
					"response": []
				},
				{
					"name": "Get Orders Verify",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/verify/:extOrderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders",
								"verify",
								":extOrderId"
							]
						},
						"description": "GET /api/manageorders/orders/verify/:extOrderId  Verify that an order was received by ManageOrders  Parameters: extOrderId - External order ID (e.g., \"NWCA-12345\")  Response: { \"success\": true, \"found\": true, \"extOrderId\": \"NWCA-12345\", \"uploadedAt\": \"2025-10-27\", \"orderData\": {...} }"
					},
					"response": []
				},
				{
					"name": "Create Auth Test",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"test"
							]
						},
						"description": "POST /api/manageorders/auth/test  Test authentication with ManageOrders PUSH API  Response: { \"success\": true, \"message\": \"Authentication successful\", \"tokenExpires\": \"2025-10-27T11:30:00Z\" }"
					},
					"response": []
				},
				{
					"name": "Get Push Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/push/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"push",
								"health"
							]
						},
						"description": "GET /api/manageorders/push/health  Health check endpoint for PUSH API functionality"
					},
					"response": []
				},
				{
					"name": "Get Manageorders Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/customers?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"customers"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/customers  Fetches unique customers from ManageOrders based on orders from the last 60 days.  Query Parameters: - refresh (boolean): Force refresh of cached data (default: false)  Response: { \"customers\": [...], \"cached\": true/false, \"cacheDate\": \"2025-10-26\", \"count\": 383 }"
					},
					"response": []
				},
				{
					"name": "Get Manageorders Cache Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/cache-info?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"cache-info"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/cache-info  Returns information about the current cache state (for debugging)."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/orders  Fetches orders by date range with multiple date filter options. Supports: date_Ordered, date_Invoiced, date_RequestedToShip, date_Produced, date_Shipped"
					},
					"response": []
				},
				{
					"name": "Get Manageorders Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders/:order_no?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders",
								":order_no"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/orders/:order_no  Fetches a specific order by order number."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Getorderno",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/getorderno/:ext_order_id?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"getorderno",
								":ext_order_id"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/getorderno/:ext_order_id  Gets the ManageOrders order number from an external order ID."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Lineitems",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/lineitems/:order_no?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"lineitems",
								":order_no"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/lineitems/:order_no  Fetches line items for a specific order."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Payments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/payments?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"payments"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/payments  Fetches payments by date range."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Payments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/payments/:order_no?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"payments",
								":order_no"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/payments/:order_no  Fetches payments for a specific order."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Tracking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/tracking?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"tracking"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/tracking  Fetches tracking information by date range."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Tracking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/tracking/:order_no?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"tracking",
								":order_no"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/tracking/:order_no  Fetches tracking information for a specific order."
					},
					"response": []
				},
				{
					"name": "Get Manageorders Inventorylevels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/inventorylevels?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"inventorylevels"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "refresh parameter",
									"disabled": false
								}
							]
						},
						"description": "GET /api/manageorders/inventorylevels  Fetches inventory levels with optional filters. Supports: PartNumber, ColorRange, Color, SKU, VendorName, etc."
					},
					"response": []
				},
				{
					"name": "Get Quote_analytics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics"
							],
							"query": [
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "eventType",
									"value": "",
									"description": "eventType parameter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_analytics"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_analytics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							]
						},
						"description": "GET /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_analytics",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics"
							]
						},
						"description": "POST /api/quote_analytics"
					},
					"response": []
				},
				{
					"name": "Update Quote_analytics",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							]
						},
						"description": "PUT /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_analytics",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics",
								":id"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/quote_analytics/:id"
					},
					"response": []
				},
				{
					"name": "Get Quote_items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "styleNumber",
									"value": "",
									"description": "Product style number",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_items"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							]
						},
						"description": "GET /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_items",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items"
							]
						},
						"description": "POST /api/quote_items - ENHANCED WITH DEBUGGING"
					},
					"response": []
				},
				{
					"name": "Update Quote_items",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							]
						},
						"description": "PUT /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_items",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items",
								":id"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "customerEmail",
									"value": "",
									"description": "customerEmail parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								}
							]
						},
						"description": "DELETE /api/quote_items/:id"
					},
					"response": []
				},
				{
					"name": "Get Quote_sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions"
							],
							"query": [
								{
									"key": "quoteID",
									"value": "",
									"description": "quoteID parameter",
									"disabled": true
								},
								{
									"key": "sessionID",
									"value": "",
									"description": "sessionID parameter",
									"disabled": true
								},
								{
									"key": "customerEmail",
									"value": "",
									"description": "customerEmail parameter",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"description": "Status filter",
									"disabled": true
								}
							]
						},
						"description": "GET /api/quote_sessions"
					},
					"response": []
				},
				{
					"name": "Get Single Quote_sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "GET /api/quote_sessions/:id"
					},
					"response": []
				},
				{
					"name": "Create Quote_sessions",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions"
							]
						},
						"description": "POST /api/quote_sessions"
					},
					"response": []
				},
				{
					"name": "Update Quote_sessions",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "PUT /api/quote_sessions/:id"
					},
					"response": []
				},
				{
					"name": "Delete Quote_sessions",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions",
								":id"
							]
						},
						"description": "DELETE /api/quote_sessions/:id"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä ManageOrders API",
			"description": "ShopWorks ManageOrders integration - Customer data from OnSite ERP",
			"item": [
				{
					"name": "Sign In (Get Token)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Erik@nwcustomapparel.com\",\n  \"password\": \"%L[qT4h2\"\n}"
						},
						"url": {
							"raw": "https://manageordersapi.com/v1/manageorders/signin",
							"protocol": "https",
							"host": [
								"manageordersapi",
								"com"
							],
							"path": [
								"v1",
								"manageorders",
								"signin"
							]
						},
						"description": "**Direct ManageOrders API Call** - Authenticate and get JWT token\n\nThis is a direct call to the ManageOrders API (not proxied). Use this to get a token for testing.\n\n**Request:**\n```json\n{\n  \"username\": \"your-email@example.com\",\n  \"password\": \"your-password\"\n}\n```\n\n**Response:**\n```json\n{\n  \"id_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600\n}\n```\n\n**Note:** Our proxy handles authentication automatically - you don't need to call this for normal usage."
					},
					"response": []
				},
				{
					"name": "üìñ API Quick Reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "",
							"host": [
								""
							]
						},
						"description": "# ManageOrders API Quick Reference\n\n## üìÖ Date Formats\n\nAll date parameters accept these formats:\n- **ISO Date:** `2025-10-01` (recommended)\n- **ISO DateTime:** `2025-10-01T00:00:00`\n- **ISO with Timezone:** `2025-10-01T00:00:00-07:00`\n\n### Example Date Ranges:\n```\nToday's orders:\ndate_Ordered_start=2025-10-26&date_Ordered_end=2025-10-26\n\nLast 7 days:\ndate_Ordered_start=2025-10-19&date_Ordered_end=2025-10-26\n\nCurrent month:\ndate_Ordered_start=2025-10-01&date_Ordered_end=2025-10-31\n```\n\n---\n\n## üîç Available Date Fields\n\n### Orders Endpoint\n- `date_Ordered` - When customer placed order\n- `date_Invoiced` - When order was invoiced\n- `date_Shipped` - When order was shipped\n- `date_Produced` - When order was produced\n- `date_RequestedToShip` - Requested ship date\n\n### Payments Endpoint\n- `date_PaymentApplied` - When payment was applied\n\n### Tracking Endpoint\n- `date_Creation` - When tracking was created\n- `date_Imported` - When tracking was imported\n\n**Usage:** Add `_start` and `_end` suffix for ranges\n- Example: `date_Invoiced_start=2025-10-01&date_Invoiced_end=2025-10-31`\n\n---\n\n## üéØ Common Query Patterns\n\n### Get Recent Orders\n```\nGET /api/manageorders/orders?date_Invoiced_start=2025-10-01&date_Invoiced_end=2025-10-26\n```\n\n### Check Product Inventory\n```\nGET /api/manageorders/inventorylevels?PartNumber=PC54\n```\n\n### Get Order Details\n```\nGET /api/manageorders/orders/138145\n```\n\n### Get Order Line Items\n```\nGET /api/manageorders/lineitems/138145\n```\n\n### Get Order Tracking\n```\nGET /api/manageorders/tracking/138152\n```\n\n### Force Cache Refresh\n```\nAdd ?refresh=true to any endpoint\nExample: /api/manageorders/customers?refresh=true\n```\n\n---\n\n## üì¶ Inventory Filters\n\n`GET /api/manageorders/inventorylevels` supports:\n- `PartNumber` - Product part number (e.g., \"PC54\")\n- `Color` - Specific color name\n- `ColorRange` - Color range filter\n- `SKU` - Product SKU\n- `VendorName` - Vendor (e.g., \"SANMAR\")\n- `date_Modification_start/end` - Recently updated inventory\n\n**Example:** `?PartNumber=PC54&VendorName=SANMAR`\n\n---\n\n## ‚ö° Cache Durations\n\n| Endpoint | Cache | Why |\n|----------|-------|-----|\n| Inventory | 5 min | Real-time stock critical |\n| Tracking | 15 min | Updates during shipping |\n| Orders (queries) | 1 hour | Intraday changes |\n| Orders (by ID) | 24 hours | Historical data |\n| Line Items | 24 hours | Historical data |\n| Payments | 1 hour (queries), 24 hours (by ID) | Same as orders |\n| Customers | 24 hours | Changes slowly |\n\n---\n\n## üìù Response Format\n\nAll endpoints return:\n```json\n{\n  \"result\": [...],     // Array of results (empty array if not found)\n  \"count\": 5,          // Number of results\n  \"cached\": true       // Whether response was cached\n}\n```\n\n**Not Found:** Returns empty array with 200 status (not 404)\n```json\n{\n  \"result\": [],\n  \"count\": 0,\n  \"cached\": false\n}\n```\n\n---\n\n## üîë Real Test Data\n\n**Order Numbers:**\n- 138145 - Order with line items\n- 138146 - Order with payment\n- 138152 - Order with tracking\n\n**Part Numbers:**\n- PC54 - Port & Company Core Cotton Tee\n- PC61 - Port & Company Essential Tee\n\n**Date Range:**\n- 2025-10-01 to 2025-10-26 (Current month)\n\n---\n\n## üé® Size Fields\n\nLine items and inventory use Size01-06:\n- Size01 = XS\n- Size02 = S\n- Size03 = M\n- Size04 = L\n- Size05 = XL\n- Size06 = 2XL\n\n(Note: Actual size meanings may vary by product)\n\n---\n\n## üöÄ Getting Started\n\n1. **Check Inventory:** Start with `/api/manageorders/inventorylevels?PartNumber=PC54`\n2. **Get Recent Orders:** Try `/api/manageorders/orders?date_Invoiced_start=2025-10-01&date_Invoiced_end=2025-10-26`\n3. **Look Up Order:** Use a real order number like `/api/manageorders/orders/138145`\n4. **Get Line Items:** `/api/manageorders/lineitems/138145`\n5. **Check Tracking:** `/api/manageorders/tracking/138152`\n\n**All examples in this collection use real data and will work immediately!**"
					},
					"response": []
				},
				{
					"name": "Get Customers (Last 60 Days)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/customers?refresh=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"customers"
							],
							"query": [
								{
									"key": "refresh",
									"value": "false",
									"description": "Force cache refresh (true/false)"
								}
							]
						},
						"description": "**Get Unique Customers from Last 60 Days of Orders**\n\nFetches and deduplicates customers based on orders placed in the last 60 days.\n\n**Features:**\n- ‚úÖ Automatic deduplication by customer ID\n- ‚úÖ Phone number cleaning (removes 'W ' and 'C ' prefixes)\n- ‚úÖ Sorted alphabetically by customer name\n- ‚úÖ 24-hour cache\n- ‚úÖ Rate limited (30 requests/minute)\n\n**Query Parameters:**\n- `refresh` (boolean, optional): Force cache refresh. Default: false\n\n**Example Usage:**\n```\n# Get customers (uses cache)\nGET /api/manageorders/customers\n\n# Force refresh\nGET /api/manageorders/customers?refresh=true\n```\n\n**Response:**\n```json\n{\n  \"customers\": [\n    {\n      \"id_Customer\": 12279,\n      \"CustomerName\": \"Washington State Housing Finance Commission\",\n      \"ContactFirstName\": \"Tera\",\n      \"ContactLastName\": \"Ahlborn\",\n      \"ContactEmail\": \"Tera.Ahlborn@wshfc.org\",\n      \"ContactPhone\": \"206-287-4470\",\n      \"CustomerServiceRep\": \"Nika Lao\",\n      \"lastOrderDate\": \"2025-10-01T00:00:00.000Z\"\n    }\n  ],\n  \"cached\": true,\n  \"cacheDate\": \"2025-10-26\",\n  \"count\": 389\n}\n```\n\n**Performance:**\n- Initial load: ~2.3s (912 orders ‚Üí 389 customers)\n- Cached response: <100ms"
					},
					"response": []
				},
				{
					"name": "Get Cache Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/cache-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"cache-info"
							],
							"query": []
						},
						"description": "**Debug Endpoint - Cache Status**\n\nReturns detailed information about the customer cache state.\n\n**Use Cases:**\n- Check if cache is working\n- See when cache was last refreshed\n- Determine when cache will expire\n- Debug caching issues\n\n**Response:**\n```json\n{\n  \"cacheExists\": true,\n  \"cacheValid\": true,\n  \"cacheTimestamp\": \"2025-10-26T15:50:18.000Z\",\n  \"cacheAgeMs\": 300000,\n  \"cacheAgeMinutes\": 5,\n  \"cacheDurationMs\": 86400000,\n  \"customerCount\": 389\n}\n```"
					},
					"response": []
				},
				{
					"name": "Get Orders (by Date Range)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								},
								{
									"key": "date_Invoiced_start",
									"value": "2025-10-01",
									"description": "Start date (YYYY-MM-DD)",
									"disabled": false
								},
								{
									"key": "date_Invoiced_end",
									"value": "2025-10-26",
									"description": "End date (YYYY-MM-DD)",
									"disabled": false
								}
							]
						},
						"description": "**Query Orders by Date Range** ‚è∞ Cache: 1 hour\n\nFetch orders using multiple date filter options.\n\n**Available Date Fields:**\n- `date_Ordered` - When customer placed order\n- `date_Invoiced` - When order was invoiced ‚≠ê (most common)\n- `date_Shipped` - When order was shipped\n- `date_Produced` - When order was produced\n- `date_RequestedToShip` - Requested ship date\n\n**Date Format:** `YYYY-MM-DD` or `YYYY-MM-DDTHH:MM:SS`\n\n**Query Parameters:**\n- `date_[Field]_start` - Start of date range\n- `date_[Field]_end` - End of date range\n- `id_Customer` - Filter by specific customer ID\n- `refresh` (boolean) - Force cache refresh\n\n**Example Queries:**\n```\n# Get orders invoiced in October\n?date_Invoiced_start=2025-10-01&date_Invoiced_end=2025-10-31\n\n# Get orders shipped last week\n?date_Shipped_start=2025-10-19&date_Shipped_end=2025-10-26\n\n# Get orders for specific customer\n?date_Ordered_start=2025-10-01&date_Ordered_end=2025-10-26&id_Customer=12279\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Order\": 138145,\n      \"id_Customer\": 12279,\n      \"CustomerName\": \"ABC Company\",\n      \"date_Ordered\": \"2025-10-15T00:00:00.000Z\",\n      \"date_Invoiced\": \"2025-10-16T00:00:00.000Z\",\n      \"cur_TotalInvoice\": 1250.00,\n      \"sts_Shipped\": true\n      // ... more fields\n    }\n  ],\n  \"count\": 24,\n  \"cached\": false\n}\n```\n\n**Performance:** ~2 seconds for 24 orders, <100ms when cached"
					},
					"response": []
				},
				{
					"name": "Get Order (by Order Number)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders/138145?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders",
								"138145"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "order_no",
									"value": "138145",
									"description": "Example order_no"
								}
							]
						},
						"description": "**Get Specific Order Details** ‚è∞ Cache: 24 hours\n\nFetch complete information for a single order by order number.\n\n**URL Parameter:**\n- `:order_no` - ManageOrders order number (e.g., 138145)\n\n**Use Cases:**\n- Order status page\n- \"Track My Order\" feature\n- Customer self-service portal\n- Order lookup\n\n**Example:**\n```\nGET /api/manageorders/orders/138145\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Order\": 138145,\n      \"id_Customer\": 12279,\n      \"CustomerName\": \"ABC Company\",\n      \"ContactEmail\": \"customer@example.com\",\n      \"date_Ordered\": \"2025-10-15T00:00:00.000Z\",\n      \"date_Invoiced\": \"2025-10-16T00:00:00.000Z\",\n      \"date_Shipped\": \"2025-10-18T00:00:00.000Z\",\n      \"cur_TotalInvoice\": 1250.00,\n      \"cur_Balance\": 0.00,\n      \"sts_Shipped\": true,\n      \"CustomerServiceRep\": \"Nika Lao\"\n      // ... more fields\n    }\n  ],\n  \"count\": 1,\n  \"cached\": true\n}\n```\n\n**Note:** Returns array with single order, or empty array if not found\n\n**Performance:** <1 second, <100ms when cached"
					},
					"response": []
				},
				{
					"name": "Get Order Number (by External ID)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/getorderno/SHOP-12345?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"getorderno",
								"SHOP-12345"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ext_order_id",
									"value": "SHOP-12345",
									"description": "Example ext_order_id"
								}
							]
						},
						"description": "**Map External Order ID to ManageOrders Order Number** ‚è∞ Cache: 24 hours\n\nConverts external system order IDs (Shopify, WooCommerce, etc.) to ManageOrders order numbers.\n\n**URL Parameter:**\n- `:ext_order_id` - External order ID from your system\n\n**Use Cases:**\n- Integration with e-commerce platforms\n- Order synchronization\n- Cross-system order lookup\n- API integrations\n\n**Example:**\n```\nGET /api/manageorders/getorderno/SHOP-12345\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Order\": 138145,\n      \"ext_OrderId\": \"SHOP-12345\"\n    }\n  ],\n  \"count\": 1,\n  \"cached\": true\n}\n```\n\n**Workflow:**\n1. Customer places order on your webstore (gets external ID)\n2. Order syncs to ManageOrders (gets ManageOrders order number)\n3. Use this endpoint to map external ID ‚Üí ManageOrders order number\n4. Use that number with other endpoints\n\n**Note:** Returns empty array if external ID not found"
					},
					"response": []
				},
				{
					"name": "Get Line Items (for Order)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/lineitems/138145?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"lineitems",
								"138145"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "order_no",
									"value": "138145",
									"description": "Example order_no"
								}
							]
						},
						"description": "**Get Order Line Items (Products, Quantities, Pricing)** ‚è∞ Cache: 24 hours\n\nFetch detailed line items for a specific order, including products, sizes, and pricing.\n\n**URL Parameter:**\n- `:order_no` - ManageOrders order number\n\n**Use Cases:**\n- Display order contents\n- Show product breakdown\n- Size distribution\n- Pricing details\n- Custom fields (decoration info)\n\n**Example:**\n```\nGET /api/manageorders/lineitems/138145\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_OrderLine\": 234567,\n      \"id_Order\": 138145,\n      \"PartNumber\": \"PC54\",\n      \"PartDescription\": \"Port & Company Core Cotton Tee\",\n      \"PartColor\": \"Jet Black\",\n      \"Size01\": 0,   // XS quantity\n      \"Size02\": 2,   // S quantity\n      \"Size03\": 5,   // M quantity\n      \"Size04\": 8,   // L quantity\n      \"Size05\": 3,   // XL quantity\n      \"Size06\": 0,   // 2XL quantity\n      \"LineQuantity\": 18,\n      \"LineUnitPrice\": 12.50,\n      \"LinePrice\": 225.00,\n      \"Custom01\": \"Left Chest Logo\",\n      \"Custom02\": \"3x3 inches\",\n      \"Custom03\": \"Thread color: White\"\n      // ... more fields\n    }\n  ],\n  \"count\": 2,\n  \"cached\": true\n}\n```\n\n**Size Fields:**\n- Size01 through Size06 represent different sizes (typically XS through 2XL)\n- Actual size labels may vary by product\n- Total quantity = Sum of all size fields\n\n**Performance:** <1 second, <100ms when cached"
					},
					"response": []
				},
				{
					"name": "Get Payments (by Date Range)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/payments?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"payments"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								},
								{
									"key": "date_PaymentApplied_start",
									"value": "2025-10-01",
									"description": "Start date (YYYY-MM-DD)",
									"disabled": false
								},
								{
									"key": "date_PaymentApplied_end",
									"value": "2025-10-26",
									"description": "End date (YYYY-MM-DD)",
									"disabled": false
								}
							]
						},
						"description": "**Query Payments by Date Range** ‚è∞ Cache: 1 hour\n\nFetch payment transactions for a date range.\n\n**Query Parameters:**\n- `date_PaymentApplied_start` - Start date (YYYY-MM-DD)\n- `date_PaymentApplied_end` - End date (YYYY-MM-DD)\n- `refresh` (boolean) - Force cache refresh\n\n**Use Cases:**\n- Payment reports\n- Cash flow analysis\n- Accounting reconciliation\n- Payment history\n\n**Example:**\n```\n# Get October payments\nGET /api/manageorders/payments?date_PaymentApplied_start=2025-10-01&date_PaymentApplied_end=2025-10-31\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Payment\": 56789,\n      \"id_Order\": 138146,\n      \"PaymentAmount\": 500.00,\n      \"PaymentMethod\": \"Credit Card\",\n      \"date_PaymentApplied\": \"2025-10-16T14:30:00.000Z\",\n      \"PaymentSource\": \"Web\"\n      // ... more fields\n    }\n  ],\n  \"count\": 15,\n  \"cached\": false\n}\n```\n\n**Payment Sources:**\n- \"Web\" - Online payments\n- \"OnSite\" - Payments entered in OnSite system"
					},
					"response": []
				},
				{
					"name": "Get Payments (for Order)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/payments/138146?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"payments",
								"138146"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "order_no",
									"value": "138146",
									"description": "Example order_no"
								}
							]
						},
						"description": "**Get Payments for Specific Order** ‚è∞ Cache: 24 hours\n\nFetch all payment transactions for a single order.\n\n**URL Parameter:**\n- `:order_no` - ManageOrders order number\n\n**Use Cases:**\n- Order payment history\n- Payment verification\n- Balance calculation\n- Invoice reconciliation\n\n**Example:**\n```\nGET /api/manageorders/payments/138146\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Payment\": 56789,\n      \"id_Order\": 138146,\n      \"PaymentAmount\": 500.00,\n      \"PaymentMethod\": \"Credit Card\",\n      \"date_PaymentApplied\": \"2025-10-16T14:30:00.000Z\",\n      \"PaymentSource\": \"Web\",\n      \"PaymentNotes\": \"Stripe payment\"\n    }\n  ],\n  \"count\": 1,\n  \"cached\": true\n}\n```\n\n**Note:** An order may have multiple payments if paid in installments\n\n**Calculate Balance:**\n```javascript\nconst totalPaid = payments.reduce((sum, p) => sum + p.PaymentAmount, 0);\nconst balance = order.cur_TotalInvoice - totalPaid;\n```"
					},
					"response": []
				},
				{
					"name": "Get Tracking (by Date Range)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/tracking?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"tracking"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								},
								{
									"key": "date_Creation_start",
									"value": "2025-10-01",
									"description": "Start date (YYYY-MM-DD)",
									"disabled": false
								},
								{
									"key": "date_Creation_end",
									"value": "2025-10-26",
									"description": "End date (YYYY-MM-DD)",
									"disabled": false
								}
							]
						},
						"description": "**Query Tracking Information by Date Range** ‚è∞ Cache: 15 minutes\n\nFetch shipment tracking for a date range.\n\n**Available Date Fields:**\n- `date_Creation` - When tracking was created\n- `date_Imported` - When tracking was imported from carrier\n\n**Query Parameters:**\n- `date_[Field]_start` - Start date (YYYY-MM-DD)\n- `date_[Field]_end` - End date (YYYY-MM-DD)\n- `refresh` (boolean) - Force cache refresh\n\n**Use Cases:**\n- Recent shipments report\n- Shipping activity dashboard\n- Carrier performance analysis\n\n**Example:**\n```\n# Get tracking created in last week\nGET /api/manageorders/tracking?date_Creation_start=2025-10-19&date_Creation_end=2025-10-26\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Tracking\": 12345,\n      \"id_Order\": 138152,\n      \"TrackingNumber\": \"1Z999AA10123456784\",\n      \"Type\": \"UPS\",\n      \"date_Creation\": \"2025-10-18T10:00:00.000Z\",\n      \"AddressCity\": \"Seattle\",\n      \"AddressState\": \"WA\",\n      \"Weight\": 5.2,\n      \"FreightCost\": 12.50\n    }\n  ],\n  \"count\": 8,\n  \"cached\": false\n}\n```\n\n**Cache:** 15 minutes (updates frequently during shipping day)"
					},
					"response": []
				},
				{
					"name": "Get Tracking (for Order)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/tracking/138152?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"tracking",
								"138152"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "order_no",
									"value": "138152",
									"description": "Example order_no"
								}
							]
						},
						"description": "**Get Tracking for Specific Order** ‚è∞ Cache: 15 minutes\n\nFetch shipment tracking information for a single order.\n\n**URL Parameter:**\n- `:order_no` - ManageOrders order number\n\n**Use Cases:**\n- \"Track My Order\" page\n- Shipping confirmation emails\n- Customer self-service\n- Order status updates\n\n**Example:**\n```\nGET /api/manageorders/tracking/138152\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Tracking\": 12345,\n      \"id_Order\": 138152,\n      \"TrackingNumber\": \"1Z999AA10123456784\",\n      \"Type\": \"UPS\",\n      \"date_Creation\": \"2025-10-18T10:00:00.000Z\",\n      \"AddressName\": \"John Smith\",\n      \"AddressCompany\": \"ABC Corp\",\n      \"AddressLine1\": \"123 Main St\",\n      \"AddressLine2\": \"Suite 100\",\n      \"AddressCity\": \"Seattle\",\n      \"AddressState\": \"WA\",\n      \"AddressZip\": \"98101\",\n      \"Weight\": 5.2,\n      \"FreightCost\": 12.50\n    }\n  ],\n  \"count\": 1,\n  \"cached\": false\n}\n```\n\n**Note:** An order may have multiple tracking numbers if shipped in multiple packages\n\n**Common Carriers:**\n- \"UPS\" - UPS tracking\n- \"FEDEX\" - FedEx tracking\n- \"USPS\" - USPS tracking\n\n**Build Tracking URL:**\n```javascript\nconst trackingUrls = {\n  'UPS': (num) => `https://wwwapps.ups.com/tracking/tracking.cgi?tracknum=${num}`,\n  'FEDEX': (num) => `https://www.fedex.com/fedextrack/?tracknumbers=${num}`,\n  'USPS': (num) => `https://tools.usps.com/go/TrackConfirmAction?tLabels=${num}`\n};\n```\n\n**Cache:** 15 minutes (frequent updates during shipping)"
					},
					"response": []
				},
				{
					"name": "Get Inventory Levels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/inventorylevels?refresh=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"inventorylevels"
							],
							"query": [
								{
									"key": "refresh",
									"value": "",
									"description": "Force cache refresh (true/false)",
									"disabled": true
								},
								{
									"key": "PartNumber",
									"value": "PC54",
									"description": "Product part number (e.g., PC54, PC61)",
									"disabled": false
								},
								{
									"key": "VendorName",
									"value": "",
									"description": "Vendor name (e.g., SANMAR)",
									"disabled": true
								},
								{
									"key": "Color",
									"value": "",
									"description": "Specific color name",
									"disabled": true
								}
							]
						},
						"description": "**Get Real-Time Inventory Levels** ‚è∞ Cache: 5 minutes ‚≠ê CRITICAL FOR WEBSTORE\n\nFetch current inventory quantities with Size01-06 breakdown.\n\n**Available Filters:**\n- `PartNumber` - Product part number (e.g., \"PC54\")\n- `Color` - Specific color name\n- `ColorRange` - Color range filter\n- `SKU` - Product SKU\n- `VendorName` - Vendor (e.g., \"SANMAR\")\n- `date_Modification_start/end` - Recently updated inventory\n- `refresh` (boolean) - Force cache refresh\n\n**Use Cases:** üåü\n- Show \"In Stock\" / \"Out of Stock\" on product pages\n- Real-time availability before adding to cart\n- Prevent overselling\n- Display size availability matrix\n- Inventory reports\n\n**Example Queries:**\n```\n# Check stock for specific product\nGET /api/manageorders/inventorylevels?PartNumber=PC54\n\n# Get all SANMAR products\nGET /api/manageorders/inventorylevels?VendorName=SANMAR\n\n# Filter by color\nGET /api/manageorders/inventorylevels?PartNumber=PC54&Color=Jet Black\n```\n\n**Response:**\n```json\n{\n  \"result\": [\n    {\n      \"id_Part\": 12345,\n      \"PartNumber\": \"PC54\",\n      \"PartDescription\": \"Port & Company Core Cotton Tee\",\n      \"Color\": \"Jet Black\",\n      \"SKU\": \"PC54-BLK\",\n      \"VendorName\": \"SANMAR\",\n      \"Size01\": 4,    // XS quantity\n      \"Size02\": 10,   // S quantity\n      \"Size03\": 11,   // M quantity\n      \"Size04\": 79,   // L quantity\n      \"Size05\": 0,    // XL quantity (OUT OF STOCK)\n      \"Size06\": 0,    // 2XL quantity (OUT OF STOCK)\n      \"date_Modification\": \"2025-10-26T08:30:00.000Z\"\n    },\n    // ... more color variants\n  ],\n  \"count\": 5,\n  \"cached\": false\n}\n```\n\n**Size Fields:**\n- Size01 through Size06 represent different sizes\n- Typically: XS, S, M, L, XL, 2XL\n- Actual size labels may vary by product\n- 0 = Out of stock for that size\n\n**Check Stock Example:**\n```javascript\n// Check if any sizes are in stock\nconst totalStock = item.Size01 + item.Size02 + item.Size03 +\n                   item.Size04 + item.Size05 + item.Size06;\n\nif (totalStock > 0) {\n  console.log('In Stock');\n} else {\n  console.log('Out of Stock');\n}\n\n// Check specific size\nconst largeQty = item.Size04; // L size\nif (largeQty >= requestedQty) {\n  console.log('Size L available');\n}\n```\n\n**Performance:** ~1 second for 5 color variants, <100ms when cached\n\n**Cache:** Only 5 minutes for near-real-time accuracy!"
					},
					"response": []
				}
			]
		},
		{
			"name": "üí∞ Pricing & Costs",
			"item": [
				{
					"name": "Get Pricing Tiers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-tiers?method={{method}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-tiers"
							],
							"query": [
								{
									"key": "method",
									"value": "{{method}}",
									"description": "Decoration method: DTG, EMB, CAP, ScreenPrint, DTF, EMB-AL, CAP-AL"
								}
							]
						},
						"description": "Get quantity pricing tiers for a decoration method. Shows price breaks at different quantities."
					},
					"response": []
				},
				{
					"name": "Get Base Item Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/base-item-costs?styleNumber={{styleNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"base-item-costs"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								}
							]
						},
						"description": "Get blank garment cost by size. Returns base price before decoration."
					},
					"response": []
				},
				{
					"name": "Get Size Pricing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/size-pricing?styleNumber={{styleNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"size-pricing"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								}
							]
						},
						"description": "Get comprehensive size pricing including upcharges for extended sizes (2XL, 3XL, etc)."
					},
					"response": []
				},
				{
					"name": "Get Max Prices by Style",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/max-prices-by-style?styleNumber={{styleNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"max-prices-by-style"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								}
							]
						},
						"description": "Get highest price per size across all colors. Used for 'Starting at' pricing."
					},
					"response": []
				},
				{
					"name": "Get Pricing Bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-bundle?method={{method}}&styleNumber={{styleNumber}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-bundle"
							],
							"query": [
								{
									"key": "method",
									"value": "{{method}}",
									"description": "DTG, EMB, CAP, ScreenPrint, DTF, EMB-AL (Additional Logo), CAP-AL (Cap Additional Logo)"
								},
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}",
									"description": "Optional for size-specific pricing"
								}
							]
						},
						"description": "Get complete pricing package for a decoration method. Includes all tiers, rules, and costs."
					},
					"response": []
				},
				{
					"name": "Get Pricing Bundle - EMB Additional Logo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-bundle?method=EMB-AL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-bundle"
							],
							"query": [
								{
									"key": "method",
									"value": "EMB-AL",
									"description": "Embroidery Additional Logo pricing"
								}
							]
						},
						"description": "‚úÖ DEPLOYED on Heroku (2025-09-04)\n\nGet embroidery additional logo pricing (beyond primary logo). Returns 4 tiers:\n- 1-23: $12.50\n- 24-47: $11.50\n- 48-71: $9.50\n- 72+: $8.50\n\nUsed for quotes requiring multiple embroidery locations."
					},
					"response": []
				},
				{
					"name": "Get Pricing Bundle - CAP Additional Logo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-bundle?method=CAP-AL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-bundle"
							],
							"query": [
								{
									"key": "method",
									"value": "CAP-AL",
									"description": "Cap Additional Logo pricing"
								}
							]
						},
						"description": "‚úÖ DEPLOYED on Heroku (2025-09-04)\n\nGet cap additional logo pricing (for additional locations on caps). Returns 4 tiers:\n- 1-23: $6.75\n- 24-47: $5.75\n- 48-71: $5.50\n- 72+: $5.25\n\nUsed for future cap embroidery applications."
					},
					"response": []
				},
				{
					"name": "Get Embroidery Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/embroidery-costs?itemType=Cap&stitchCount=8000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"embroidery-costs"
							],
							"query": [
								{
									"key": "itemType",
									"value": "Cap",
									"description": "Cap or Standard"
								},
								{
									"key": "stitchCount",
									"value": "8000",
									"description": "Number of stitches"
								}
							]
						},
						"description": "Get embroidery pricing based on stitch count and item type."
					},
					"response": []
				},
				{
					"name": "Get DTG Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/dtg-costs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"dtg-costs"
							]
						},
						"description": "Get all DTG (Direct to Garment) printing costs by location and size."
					},
					"response": []
				},
				{
					"name": "Get DTG Product Bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/dtg/product-bundle?styleNumber={{styleNumber}}&color={{color}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"dtg",
								"product-bundle"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}",
									"description": "Product style number (required)"
								},
								{
									"key": "color",
									"value": "{{color}}",
									"description": "Specific color to focus on (optional)"
								}
							]
						},
						"description": "üöÄ OPTIMIZED & TESTED: Get complete DTG bundle data in one request. ‚úÖ DEPLOYED on Heroku and production tested (Aug 30, 2025). Combines product details, colors, pricing tiers, DTG costs, size-based pricing, and upcharges. Reduces 4 API calls to 1. Parameters: styleNumber (required), color (optional). Performance: ~0.5-1 second response, 5-minute cache."
					},
					"response": []
				},
				{
					"name": "Get Screen Print Costs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/screenprint-costs?costType=PrimaryLocation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"screenprint-costs"
							],
							"query": [
								{
									"key": "costType",
									"value": "PrimaryLocation",
									"description": "PrimaryLocation or AdditionalLocation"
								}
							]
						},
						"description": "Get screen printing costs by number of colors and location type."
					},
					"response": []
				},
				{
					"name": "Get Pricing Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-rules?styleNumber={{styleNumber}}&method={{method}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-rules"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								},
								{
									"key": "method",
									"value": "{{method}}"
								}
							]
						},
						"description": "Get pricing rules and markups for style/method combination."
					},
					"response": []
				}
			],
			"description": "Product pricing, decoration costs, and pricing calculations"
		},
		{
			"name": "üìä Pricing Matrix",
			"item": [
				{
					"name": "Get All Pricing Matrices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix"
							]
						},
						"description": "Get all saved pricing configurations. Filter by session, style, color, or method."
					},
					"response": []
				},
				{
					"name": "Create Pricing Matrix",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SessionID\": \"{{sessionId}}\",\n  \"StyleNumber\": \"PC54\",\n  \"Color\": \"Red\",\n  \"EmbellishmentType\": \"DTG\",\n  \"TierStructure\": {\n    \"tiers\": [\n      {\"min\": 24, \"max\": 47, \"label\": \"24-47\"},\n      {\"min\": 48, \"max\": 71, \"label\": \"48-71\"},\n      {\"min\": 72, \"max\": 999, \"label\": \"72+\"}\n    ]\n  },\n  \"PriceMatrix\": {\n    \"24-47\": {\n      \"S\": 15.99,\n      \"M\": 15.99,\n      \"L\": 15.99,\n      \"XL\": 15.99,\n      \"2XL\": 17.99\n    },\n    \"48-71\": {\n      \"S\": 14.99,\n      \"M\": 14.99,\n      \"L\": 14.99,\n      \"XL\": 14.99,\n      \"2XL\": 16.99\n    },\n    \"72+\": {\n      \"S\": 13.99,\n      \"M\": 13.99,\n      \"L\": 13.99,\n      \"XL\": 13.99,\n      \"2XL\": 15.99\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix"
							]
						},
						"description": "Save custom pricing with quantity tiers for a product/decoration combo."
					},
					"response": []
				},
				{
					"name": "Lookup Pricing Matrix",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/pricing-matrix/lookup?styleNumber={{styleNumber}}&color={{color}}&embellishmentType={{method}}&sessionID={{sessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pricing-matrix",
								"lookup"
							],
							"query": [
								{
									"key": "styleNumber",
									"value": "{{styleNumber}}"
								},
								{
									"key": "color",
									"value": "{{color}}"
								},
								{
									"key": "embellishmentType",
									"value": "{{method}}"
								},
								{
									"key": "sessionID",
									"value": "{{sessionId}}"
								}
							]
						},
						"description": "Check if pricing exists for specific product/color/decoration combo."
					},
					"response": []
				}
			],
			"description": "Save and retrieve custom pricing configurations"
		},
		{
			"name": "üìù Quote System",
			"item": [
				{
					"name": "Get Quote Sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_sessions"
							]
						},
						"description": "Get all quote sessions. Formal quotes with terms and expiration."
					},
					"response": []
				},
				{
					"name": "Get Quote Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_items"
							]
						},
						"description": "Get all quote line items with pricing details."
					},
					"response": []
				},
				{
					"name": "Get Quote Analytics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/quote_analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"quote_analytics"
							]
						},
						"description": "Track quote views, modifications, and conversion metrics."
					},
					"response": []
				}
			],
			"description": "Formal quotes with expiration and tracking"
		},
		{
			"name": "üì¶ Orders & Customers",
			"item": [
				{
					"name": "Get Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "Get all orders. Shows production status and tracking info."
					},
					"response": []
				},
				{
					"name": "Get Order ODBC Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/order-odbc?limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"order-odbc"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Get detailed order records from ODBC connection."
					},
					"response": []
				},
				{
					"name": "Get Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"customers"
							]
						},
						"description": "Get all customer records with contact info."
					},
					"response": []
				}
			],
			"description": "Order management and customer records"
		},
		{
			"name": "üìà Dashboard & Reports",
			"item": [
				{
					"name": "Order Dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/order-dashboard?days=7",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"order-dashboard"
							],
							"query": [
								{
									"key": "days",
									"value": "7",
									"description": "Number of days to look back"
								},
								{
									"key": "includeDetails",
									"value": "false",
									"description": "Include order list",
									"disabled": true
								}
							]
						},
						"description": "Get order metrics, sales by rep, shipping status. Pre-calculated for performance."
					},
					"response": []
				},
				{
					"name": "Staff Announcements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/staff-announcements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"staff-announcements"
							]
						},
						"description": "Get current staff announcements and updates."
					},
					"response": []
				},
				{
					"name": "Production Schedules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/production-schedules?limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"production-schedules"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get production availability dates for all decoration methods."
					},
					"response": []
				}
			],
			"description": "Business metrics and operational data"
		},
		{
			"name": "‚öôÔ∏è Utilities",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Check API health, Caspio connection, and system info."
					},
					"response": []
				},
				{
					"name": "Get Locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"locations"
							]
						},
						"description": "Get list of print locations (Front, Back, Left Chest, etc)."
					},
					"response": []
				},
				{
					"name": "Get Transfers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/transfers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transfers"
							]
						},
						"description": "Get transfer printing options and pricing."
					},
					"response": []
				},
				{
					"name": "Test Sanmar Bulk",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/test-sanmar-bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test-sanmar-bulk"
							]
						},
						"description": "Test bulk product import from Sanmar."
					},
					"response": []
				}
			],
			"description": "System health and miscellaneous endpoints"
		},
		{
			"name": "üì§ ManageOrders PUSH API",
			"description": "Send orders TO ShopWorks OnSite via ManageOrders PUSH API. See memory/MANAGEORDERS_PUSH_INTEGRATION.md for full documentation.",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/push/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"push",
								"health"
							]
						},
						"description": "**Health Check for PUSH API**\n\nVerifies that the ManageOrders PUSH API endpoints are available.\n\n**Response:**\n```json\n{\n  \"status\": \"healthy\",\n  \"service\": \"ManageOrders PUSH API\",\n  \"timestamp\": \"2025-10-27T10:30:00.000Z\",\n  \"endpoints\": {\n    \"createOrder\": \"POST /api/manageorders/orders/create\",\n    \"verifyOrder\": \"GET /api/manageorders/orders/verify/:extOrderId\",\n    \"testAuth\": \"POST /api/manageorders/auth/test\"\n  }\n}\n```"
					},
					"response": []
				},
				{
					"name": "Test Authentication",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/auth/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"auth",
								"test"
							]
						},
						"description": "**Test ManageOrders PUSH API Credentials**\n\nVerifies that environment variables are set correctly and can authenticate with ManageOrders.\n\n**Response (Success):**\n```json\n{\n  \"success\": true,\n  \"message\": \"Authentication successful\",\n  \"tokenExpires\": \"2025-10-27T11:30:00.000Z\",\n  \"tokenLength\": 1042\n}\n```\n\n**Response (Failure):**\n```json\n{\n  \"success\": false,\n  \"message\": \"Authentication failed\",\n  \"error\": \"Authentication failed: 401 - Invalid credentials\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderNumber\": \"001\",\n  \"isTest\": true,\n  \"orderDate\": \"2025-10-27\",\n  \"customer\": {\n    \"firstName\": \"Test\",\n    \"lastName\": \"Customer\",\n    \"email\": \"test@example.com\",\n    \"phone\": \"360-555-1234\"\n  },\n  \"lineItems\": [\n    {\n      \"partNumber\": \"PC54\",\n      \"description\": \"Port & Company Core Cotton Tee\",\n      \"color\": \"Red\",\n      \"size\": \"L\",\n      \"quantity\": 12,\n      \"price\": 8.50\n    }\n  ],\n  \"shipping\": {\n    \"address1\": \"123 Test St\",\n    \"city\": \"Seattle\",\n    \"state\": \"WA\",\n    \"zip\": \"98101\",\n    \"country\": \"USA\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders",
								"create"
							]
						},
						"description": "**Create Order in ManageOrders/OnSite**\n\nPushes a new order to ManageOrders PUSH API, which will be auto-imported into OnSite within 1 hour.\n\n**Key Features:**\n- ‚úÖ Automatic date formatting (YYYY-MM-DD ‚Üí MM/DD/YYYY)\n- ‚úÖ Size translation (L ‚Üí LG in OnSite)\n- ‚úÖ Test order support (adds \"TEST-\" prefix)\n- ‚úÖ All orders go to Customer #2791\n- ‚úÖ Actual customer info stored in Contact fields\n\n**Required Fields:**\n- `orderNumber` (string) - Unique order number\n- `customer.firstName` (string)\n- `customer.lastName` (string)\n- `lineItems` (array) - At least one line item required\n- `lineItems[].partNumber` (string)\n- `lineItems[].quantity` (number)\n\n**Optional Fields:**\n- `isTest` (boolean) - Adds \"TEST-\" prefix to ExtOrderID\n- `orderDate` (string, YYYY-MM-DD) - Defaults to today\n- `requestedShipDate` (string, YYYY-MM-DD)\n- `dropDeadDate` (string, YYYY-MM-DD)\n- `shipping` (object) - Full shipping address\n- `designs` (array) - Design/artwork info\n- `payments` (array) - Payment details\n- `notes` (array) - Order notes\n\n**Response (Success):**\n```json\n{\n  \"success\": true,\n  \"extOrderId\": \"NWCA-TEST-001\",\n  \"message\": \"Order successfully pushed to ManageOrders\",\n  \"timestamp\": \"2025-10-27T10:30:00.000Z\",\n  \"onsiteImportExpected\": \"2025-10-27T11:30:00.000Z\",\n  \"details\": {\n    \"result\": \"ExtOrderID 'NWCA-TEST-001' has been uploaded.\"\n  }\n}\n```\n\n**Response (Validation Error):**\n```json\n{\n  \"success\": false,\n  \"error\": \"orderNumber is required\",\n  \"message\": \"Failed to push order to ManageOrders\",\n  \"timestamp\": \"2025-10-27T10:30:00.000Z\"\n}\n```\n\n**Date Format Note:**\nDates must be in YYYY-MM-DD format in the request. They are automatically converted to MM/DD/YYYY for OnSite.\n\n**Full Documentation:** `memory/MANAGEORDERS_PUSH_INTEGRATION.md`"
					},
					"response": []
				},
				{
					"name": "Verify Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/manageorders/orders/verify/NWCA-TEST-001",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"manageorders",
								"orders",
								"verify",
								"NWCA-TEST-001"
							]
						},
						"description": "**Verify Order Was Received by ManageOrders**\n\nChecks if an order was successfully uploaded to ManageOrders.\n\n**URL Parameter:**\n- `:extOrderId` - External order ID (e.g., \"NWCA-TEST-001\")\n\n**Response (Found):**\n```json\n{\n  \"success\": true,\n  \"found\": true,\n  \"extOrderId\": \"NWCA-TEST-001\",\n  \"uploadedAt\": \"2025-10-27\",\n  \"orderData\": {\n    \"ExtOrderID\": \"NWCA-TEST-001\",\n    \"ContactNameFirst\": \"Test\",\n    \"ContactNameLast\": \"Customer\",\n    \"date_OrderPlaced\": \"10/27/2025\"\n  }\n}\n```\n\n**Response (Not Found):**\n```json\n{\n  \"success\": true,\n  \"found\": false,\n  \"extOrderId\": \"NWCA-TEST-001\",\n  \"message\": \"Order not found in ManageOrders. It may still be processing or was uploaded on a different date.\"\n}\n```\n\n**Note:** Orders may not be immediately queryable via the order-pull API. A \"not found\" response doesn't necessarily mean the order push failed - check the create order response for confirmation."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://caspio-pricing-proxy-ab30a049961a.herokuapp.com",
			"type": "string",
			"description": "Production Heroku URL"
		},
		{
			"key": "id",
			"value": "1",
			"type": "string",
			"description": "Generic ID for CRUD operations"
		},
		{
			"key": "externalKey",
			"value": "example-key",
			"type": "string",
			"description": "External file key"
		},
		{
			"key": "extOrderId",
			"value": "value",
			"type": "string"
		},
		{
			"key": "order_no",
			"value": "value",
			"type": "string"
		},
		{
			"key": "ext_order_id",
			"value": "value",
			"type": "string"
		},
		{
			"key": "styleNumber",
			"value": "PC54",
			"type": "string"
		},
		{
			"key": "color",
			"value": "Red",
			"type": "string"
		},
		{
			"key": "method",
			"value": "DTG",
			"type": "string"
		},
		{
			"key": "sessionId",
			"value": "test-session-123",
			"type": "string"
		}
	]
}